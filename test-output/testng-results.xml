<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="94" passed="66" failed="7" skipped="21">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-27T09:51:43 IST" name="ParaBankAutomationSuite" finished-at="2025-10-27T11:04:04 IST" duration-ms="4341015">
    <groups>
      <group name="login">
        <method signature="LoginTests.passwordMasking()[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" name="passwordMasking" class="com.fintech.tests.LoginTests"/>
        <method signature="LoginTests.rememberMeSimulation()[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" name="rememberMeSimulation" class="com.fintech.tests.LoginTests"/>
        <method signature="LoginTests.sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" name="sessionTimeoutSimulation" class="com.fintech.tests.LoginTests"/>
        <method signature="LoginTests.passwordMasking()[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" name="passwordMasking" class="com.fintech.tests.LoginTests"/>
        <method signature="LoginTests.rememberMeSimulation()[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" name="rememberMeSimulation" class="com.fintech.tests.LoginTests"/>
        <method signature="LoginTests.sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" name="sessionTimeoutSimulation" class="com.fintech.tests.LoginTests"/>
      </group> <!-- login -->
    </groups>
    <test started-at="2025-10-27T09:51:43 IST" name="ChromeRun" finished-at="2025-10-27T10:12:47 IST" duration-ms="1264018">
      <class name="com.fintech.tests.LoginTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:51:43 IST" name="beforeClassLog" finished-at="2025-10-27T09:51:43 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:51:51 IST" name="setupMethod" finished-at="2025-10-27T09:52:38 IST" duration-ms="46311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:52:38 IST" name="startTest" finished-at="2025-10-27T09:52:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:52:38 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-27T09:52:58 IST" duration-ms="20413" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SUCCESS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:52:58 IST" name="afterMethod" finished-at="2025-10-27T09:53:01 IST" duration-ms="2834" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:53:01 IST" name="setupMethod" finished-at="2025-10-27T09:53:22 IST" duration-ms="21188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:53:22 IST" name="startTest" finished-at="2025-10-27T09:53:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:53:22 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-27T09:56:11 IST" duration-ms="169129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:56:11 IST" name="afterMethod" finished-at="2025-10-27T09:56:12 IST" duration-ms="689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:56:12 IST" name="setupMethod" finished-at="2025-10-27T09:56:19 IST" duration-ms="6914" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:56:19 IST" name="startTest" finished-at="2025-10-27T09:56:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:56:19 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-27T09:59:07 IST" duration-ms="168149" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[notexist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[any]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[USER_NOT_EXIST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:59:07 IST" name="afterMethod" finished-at="2025-10-27T09:59:08 IST" duration-ms="1398" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:59:08 IST" name="setupMethod" finished-at="2025-10-27T09:59:14 IST" duration-ms="5608" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:59:14 IST" name="startTest" finished-at="2025-10-27T09:59:14 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T09:59:14 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-27T10:02:01 IST" duration-ms="167441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[EMPTY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:02:01 IST" name="afterMethod" finished-at="2025-10-27T10:02:03 IST" duration-ms="1414" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:02:03 IST" name="setupMethod" finished-at="2025-10-27T10:02:08 IST" duration-ms="5015" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:02:08 IST" name="startTest" finished-at="2025-10-27T10:02:08 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:02:08 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-27T10:04:54 IST" duration-ms="166554" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user@com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID_EMAIL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:04:54 IST" name="afterMethod" finished-at="2025-10-27T10:04:55 IST" duration-ms="693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:04:55 IST" name="setupMethod" finished-at="2025-10-27T10:04:59 IST" duration-ms="4216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:04:59 IST" name="startTest" finished-at="2025-10-27T10:04:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.passwordMasking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="passwordMasking()[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:04:59 IST" name="passwordMasking" finished-at="2025-10-27T10:05:11 IST" duration-ms="11183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordMasking -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:05:11 IST" name="afterMethod" finished-at="2025-10-27T10:05:11 IST" duration-ms="698" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passwordMasking status=SUCCESS method=LoginTests.passwordMasking()[pri:0, instance:com.fintech.tests.LoginTests@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:05:11 IST" name="setupMethod" finished-at="2025-10-27T10:05:16 IST" duration-ms="4320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:05:16 IST" name="startTest" finished-at="2025-10-27T10:05:16 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.rememberMeSimulation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="rememberMeSimulation()[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:05:16 IST" name="rememberMeSimulation" finished-at="2025-10-27T10:05:37 IST" duration-ms="20914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rememberMeSimulation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:05:37 IST" name="afterMethod" finished-at="2025-10-27T10:05:37 IST" duration-ms="813" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rememberMeSimulation status=SUCCESS method=LoginTests.rememberMeSimulation()[pri:0, instance:com.fintech.tests.LoginTests@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:05:37 IST" name="setupMethod" finished-at="2025-10-27T10:05:43 IST" duration-ms="5343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:05:43 IST" name="startTest" finished-at="2025-10-27T10:05:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.sessionTimeoutSimulation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:05:43 IST" name="sessionTimeoutSimulation" finished-at="2025-10-27T10:06:24 IST" duration-ms="41279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sessionTimeoutSimulation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@4961f6af]" started-at="2025-10-27T10:06:24 IST" name="afterMethod" finished-at="2025-10-27T10:06:24 IST" duration-ms="84" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sessionTimeoutSimulation status=SUCCESS method=LoginTests.sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.LoginTests@4961f6af] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.LoginTests -->
      <class name="com.fintech.tests.LoanTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:54:21 IST" name="beforeClassLog" finished-at="2025-10-27T09:54:21 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:54:21 IST" name="setupMethod" finished-at="2025-10-27T09:54:37 IST" duration-ms="15319" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:54:37 IST" name="startTest" finished-at="2025-10-27T09:54:37 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoanTests.testLoanTyping()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testLoanTyping()[pri:1, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:54:37 IST" name="testLoanTyping" finished-at="2025-10-27T09:54:37 IST" duration-ms="25" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Session ended]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Session ended
at com.fintech.tests.LoanTests.testLoanTyping(LoanTests.java:241)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoanTyping -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:54:37 IST" name="afterMethod" finished-at="2025-10-27T09:54:44 IST" duration-ms="7112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoanTyping status=SKIP method=LoanTests.testLoanTyping()[pri:1, instance:com.fintech.tests.LoanTests@d21a74c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:54:44 IST" name="setupMethod" finished-at="2025-10-27T09:54:52 IST" duration-ms="7874" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:54:52 IST" name="startTest" finished-at="2025-10-27T09:54:52 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoanTests.submitValidLoanRequest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="submitValidLoanRequest()[pri:2, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:54:52 IST" name="submitValidLoanRequest" finished-at="2025-10-27T09:54:52 IST" duration-ms="23" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Session ended]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Session ended
at com.fintech.tests.LoanTests.submitValidLoanRequest(LoanTests.java:176)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitValidLoanRequest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:54:52 IST" name="afterMethod" finished-at="2025-10-27T09:54:54 IST" duration-ms="2392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitValidLoanRequest status=SKIP method=LoanTests.submitValidLoanRequest()[pri:2, instance:com.fintech.tests.LoanTests@d21a74c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:54:54 IST" name="setupMethod" finished-at="2025-10-27T09:55:01 IST" duration-ms="6726" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:55:01 IST" name="startTest" finished-at="2025-10-27T09:55:01 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoanTests.applyLoan(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="applyLoan(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Boolean)[pri:3, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:55:01 IST" name="applyLoan" data-provider="loanDataExcel" finished-at="2025-10-27T09:55:01 IST" duration-ms="39" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Missing Info]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Session ended]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Session ended
at com.fintech.tests.LoanTests.applyLoan(LoanTests.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applyLoan -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoanTests@d21a74c]" started-at="2025-10-27T09:55:01 IST" name="afterMethod" finished-at="2025-10-27T09:55:03 IST" duration-ms="1997" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applyLoan status=SKIP method=LoanTests.applyLoan(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Boolean)[pri:3, instance:com.fintech.tests.LoanTests@d21a74c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.LoanTests -->
      <class name="com.fintech.tests.AccountTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:51:43 IST" name="beforeClassLog" finished-at="2025-10-27T09:51:43 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:51:56 IST" name="setupMethod" finished-at="2025-10-27T09:52:41 IST" duration-ms="44753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:52:41 IST" name="startTest" finished-at="2025-10-27T09:52:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:52:41 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-27T09:53:13 IST" duration-ms="32583" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Balance update after transfer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14455]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10/01/2025]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10/01/2025]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Date]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Ascending]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[4392.93]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[⚠️ Balance element not found or stale]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: ⚠️ Balance element not found or stale
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:160)
at com.fintech.pages.AccountPage.getBalance(AccountPage.java:169)
at com.fintech.tests.AccountTests.testAccountFunctionality(AccountTests.java:367)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //table[@id='accountTable']//tr[td[a[contains(@href,'activity.htm?id=')]]]//td[2] (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.122, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50021}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50021/devtoo..., se:cdpVersion: 141.0.7390.122, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4ec5a7798b68068374689d5ffa2da979
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at com.fintech.pages.BasePage.waitForVisibility(BasePage.java:191)
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:146)
... 18 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:53:13 IST" name="resetBrowser" finished-at="2025-10-27T09:53:15 IST" duration-ms="1516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:53:15 IST" name="afterMethod" finished-at="2025-10-27T09:53:28 IST" duration-ms="12685" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SKIP method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:53:28 IST" name="setupMethod" finished-at="2025-10-27T09:53:46 IST" duration-ms="18733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:53:46 IST" name="startTest" finished-at="2025-10-27T09:53:46 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:53:46 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-27T09:55:26 IST" duration-ms="100094" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Filter transactions by date range]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[09/01/2025]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[09/30/2025]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:55:26 IST" name="resetBrowser" finished-at="2025-10-27T09:55:28 IST" duration-ms="1538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:55:28 IST" name="afterMethod" finished-at="2025-10-27T09:55:29 IST" duration-ms="1186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SUCCESS method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:55:29 IST" name="setupMethod" finished-at="2025-10-27T09:55:34 IST" duration-ms="5376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:55:34 IST" name="startTest" finished-at="2025-10-27T09:55:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:55:34 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-27T09:56:22 IST" duration-ms="47710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sort transactions by date/amount]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Date]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Ascending]]>
              </value>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:56:22 IST" name="resetBrowser" finished-at="2025-10-27T09:56:24 IST" duration-ms="1401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:56:24 IST" name="afterMethod" finished-at="2025-10-27T09:56:24 IST" duration-ms="819" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SUCCESS method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:56:24 IST" name="setupMethod" finished-at="2025-10-27T09:56:30 IST" duration-ms="5524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:56:30 IST" name="startTest" finished-at="2025-10-27T09:56:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:56:30 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-27T09:56:53 IST" duration-ms="23227" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validate account summary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2942.93]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for url to contain "activity.htm?id=13344". Current url: "https://parabank.parasoft.com/parabank/overview.htm" (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.122, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50681}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50681/devtoo..., se:cdpVersion: 141.0.7390.122, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fc50f30453406c81fab961acae70310c]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for url to contain "activity.htm?id=13344". Current url: "https://parabank.parasoft.com/parabank/overview.htm" (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.122, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50681}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50681/devtoo..., se:cdpVersion: 141.0.7390.122, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fc50f30453406c81fab961acae70310c
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at com.fintech.tests.AccountTests.testAccountFunctionality(AccountTests.java:444)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:56:53 IST" name="resetBrowser" finished-at="2025-10-27T09:56:55 IST" duration-ms="1451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:56:55 IST" name="afterMethod" finished-at="2025-10-27T09:56:57 IST" duration-ms="2336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=FAILURE method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:56:57 IST" name="setupMethod" finished-at="2025-10-27T09:57:02 IST" duration-ms="4736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:57:02 IST" name="startTest" finished-at="2025-10-27T09:57:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testBalanceUpdateAfterTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testBalanceUpdateAfterTransaction()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:57:02 IST" name="testBalanceUpdateAfterTransaction" finished-at="2025-10-27T09:57:30 IST" duration-ms="28773" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[⚠️ Balance element not found or stale]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: ⚠️ Balance element not found or stale
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:160)
at com.fintech.pages.AccountPage.getBalance(AccountPage.java:169)
at com.fintech.tests.AccountTests.testBalanceUpdateAfterTransaction(AccountTests.java:130)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //table[@id='accountTable']//tr[td[a[contains(@href,'activity.htm?id=')]]]//td[2] (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.122, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:50734}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:50734/devtoo..., se:cdpVersion: 141.0.7390.122, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ef397926477f0a70a64476c837ecdc23
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at com.fintech.pages.BasePage.waitForVisibility(BasePage.java:191)
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:146)
... 18 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBalanceUpdateAfterTransaction -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:57:30 IST" name="resetBrowser" finished-at="2025-10-27T09:57:32 IST" duration-ms="1491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:57:32 IST" name="afterMethod" finished-at="2025-10-27T09:57:34 IST" duration-ms="1590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBalanceUpdateAfterTransaction status=SKIP method=AccountTests.testBalanceUpdateAfterTransaction()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:57:34 IST" name="setupMethod" finished-at="2025-10-27T09:57:39 IST" duration-ms="5069" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:57:39 IST" name="startTest" finished-at="2025-10-27T09:57:39 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testCheckingAccountSummary()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testCheckingAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:57:39 IST" name="testCheckingAccountSummary" finished-at="2025-10-27T09:57:49 IST" duration-ms="10049" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckingAccountSummary -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:57:49 IST" name="resetBrowser" finished-at="2025-10-27T09:57:50 IST" duration-ms="1438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:57:50 IST" name="afterMethod" finished-at="2025-10-27T09:57:51 IST" duration-ms="1062" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckingAccountSummary status=SUCCESS method=AccountTests.testCheckingAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:57:51 IST" name="setupMethod" finished-at="2025-10-27T09:57:56 IST" duration-ms="5237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:57:56 IST" name="startTest" finished-at="2025-10-27T09:57:56 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testFullTransactionHistory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testFullTransactionHistory()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:57:56 IST" name="testFullTransactionHistory" finished-at="2025-10-27T09:58:36 IST" duration-ms="39928" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Transaction history should be visible expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Transaction history should be visible expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.fintech.tests.AccountTests.testFullTransactionHistory(AccountTests.java:236)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullTransactionHistory -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:58:36 IST" name="resetBrowser" finished-at="2025-10-27T09:58:38 IST" duration-ms="1488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:58:38 IST" name="afterMethod" finished-at="2025-10-27T09:58:40 IST" duration-ms="2626" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFullTransactionHistory status=FAILURE method=AccountTests.testFullTransactionHistory()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:58:40 IST" name="setupMethod" finished-at="2025-10-27T09:58:46 IST" duration-ms="5269" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:58:46 IST" name="startTest" finished-at="2025-10-27T09:58:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testSavingsAccountSummary()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testSavingsAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:58:46 IST" name="testSavingsAccountSummary" finished-at="2025-10-27T09:58:53 IST" duration-ms="6969" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[❌ No accounts found — cannot proceed with summary validation]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ❌ No accounts found — cannot proceed with summary validation
at com.fintech.tests.AccountTests.testSavingsAccountSummary(AccountTests.java:100)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSavingsAccountSummary -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:58:53 IST" name="resetBrowser" finished-at="2025-10-27T09:58:54 IST" duration-ms="1416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:58:54 IST" name="afterMethod" finished-at="2025-10-27T09:58:57 IST" duration-ms="2644" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSavingsAccountSummary status=FAILURE method=AccountTests.testSavingsAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:58:57 IST" name="setupMethod" finished-at="2025-10-27T09:59:02 IST" duration-ms="5027" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:59:02 IST" name="startTest" finished-at="2025-10-27T09:59:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testTransactionDetailsFormat()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testTransactionDetailsFormat()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:59:02 IST" name="testTransactionDetailsFormat" finished-at="2025-10-27T09:59:51 IST" duration-ms="48805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionDetailsFormat -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:59:51 IST" name="resetBrowser" finished-at="2025-10-27T09:59:52 IST" duration-ms="1373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:59:52 IST" name="afterMethod" finished-at="2025-10-27T09:59:53 IST" duration-ms="953" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTransactionDetailsFormat status=SUCCESS method=AccountTests.testTransactionDetailsFormat()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T09:59:53 IST" name="setupMethod" finished-at="2025-10-27T10:00:00 IST" duration-ms="6701" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method signature="testTransactionFilterByDateRange()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T10:00:00 IST" name="testTransactionFilterByDateRange" finished-at="2025-10-27T10:01:34 IST" duration-ms="94230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionFilterByDateRange -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T10:00:00 IST" name="startTest" finished-at="2025-10-27T10:00:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testTransactionFilterByDateRange()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T10:01:34 IST" name="resetBrowser" finished-at="2025-10-27T10:01:35 IST" duration-ms="1479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T10:01:35 IST" name="afterMethod" finished-at="2025-10-27T10:01:36 IST" duration-ms="1181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTransactionFilterByDateRange status=SUCCESS method=AccountTests.testTransactionFilterByDateRange()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T10:01:36 IST" name="setupMethod" finished-at="2025-10-27T10:01:41 IST" duration-ms="4999" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T10:01:41 IST" name="startTest" finished-at="2025-10-27T10:01:41 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testTransactionSortingByDateAndAmount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testTransactionSortingByDateAndAmount()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T10:01:41 IST" name="testTransactionSortingByDateAndAmount" finished-at="2025-10-27T10:02:48 IST" duration-ms="66676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionSortingByDateAndAmount -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T10:02:48 IST" name="resetBrowser" finished-at="2025-10-27T10:02:50 IST" duration-ms="1414" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41]" started-at="2025-10-27T10:02:50 IST" name="afterMethod" finished-at="2025-10-27T10:02:50 IST" duration-ms="798" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTransactionSortingByDateAndAmount status=SUCCESS method=AccountTests.testTransactionSortingByDateAndAmount()[pri:0, instance:com.fintech.tests.AccountTests@26b3fd41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.AccountTests -->
      <class name="com.fintech.tests.ContactTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:51:43 IST" name="beforeClassLog" finished-at="2025-10-27T09:51:43 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:51:43 IST" name="setupMethod" finished-at="2025-10-27T09:52:40 IST" duration-ms="57092" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:52:40 IST" name="startTest" finished-at="2025-10-27T09:52:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.openContactForm()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="openContactForm()[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:52:40 IST" name="openContactForm" finished-at="2025-10-27T09:52:50 IST" duration-ms="9605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openContactForm -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:52:50 IST" name="afterMethod" finished-at="2025-10-27T09:52:54 IST" duration-ms="3718" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openContactForm status=SUCCESS method=ContactTests.openContactForm()[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:52:54 IST" name="setupMethod" finished-at="2025-10-27T09:53:06 IST" duration-ms="11783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:53:06 IST" name="startTest" finished-at="2025-10-27T09:53:06 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:53:06 IST" name="submitContactForm" data-provider="contactDataExcel" finished-at="2025-10-27T09:53:22 IST" duration-ms="16068" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test User]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9.999999999E9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[This is a test message]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitContactForm -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:53:22 IST" name="afterMethod" finished-at="2025-10-27T09:53:33 IST" duration-ms="11664" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitContactForm status=SUCCESS method=ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:53:33 IST" name="setupMethod" finished-at="2025-10-27T09:53:52 IST" duration-ms="18923" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:53:52 IST" name="startTest" finished-at="2025-10-27T09:53:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:53:52 IST" name="submitContactForm" data-provider="contactDataExcel" finished-at="2025-10-27T09:54:02 IST" duration-ms="10070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitContactForm -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:54:02 IST" name="afterMethod" finished-at="2025-10-27T09:54:14 IST" duration-ms="11746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitContactForm status=SUCCESS method=ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:54:14 IST" name="setupMethod" finished-at="2025-10-27T09:54:26 IST" duration-ms="12042" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:54:26 IST" name="startTest" finished-at="2025-10-27T09:54:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.verifyContactSuccessMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyContactSuccessMessage()[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:54:26 IST" name="verifyContactSuccessMessage" finished-at="2025-10-27T09:54:34 IST" duration-ms="8215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactSuccessMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa]" started-at="2025-10-27T09:54:34 IST" name="afterMethod" finished-at="2025-10-27T09:54:44 IST" duration-ms="9520" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactSuccessMessage status=SUCCESS method=ContactTests.verifyContactSuccessMessage()[pri:0, instance:com.fintech.tests.ContactTests@6e509ffa] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.ContactTests -->
      <class name="com.fintech.tests.NavigationUITests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:51:43 IST" name="beforeClassLog" finished-at="2025-10-27T09:51:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:51:43 IST" name="setupMethod" finished-at="2025-10-27T09:52:36 IST" duration-ms="52242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:52:36 IST" name="startTest" finished-at="2025-10-27T09:52:36 IST" duration-ms="511" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.checkParaBankConnectivity()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="checkParaBankConnectivity()[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:52:36 IST" name="checkParaBankConnectivity" finished-at="2025-10-27T09:52:41 IST" duration-ms="4966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkParaBankConnectivity -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:52:41 IST" name="afterMethod" finished-at="2025-10-27T09:52:54 IST" duration-ms="12649" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkParaBankConnectivity status=SUCCESS method=NavigationUITests.checkParaBankConnectivity()[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:52:54 IST" name="setupMethod" finished-at="2025-10-27T09:53:10 IST" duration-ms="16671" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:53:10 IST" name="startTest" finished-at="2025-10-27T09:53:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.logoRedirectsHome()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoRedirectsHome()[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:53:10 IST" name="logoRedirectsHome" finished-at="2025-10-27T09:53:18 IST" duration-ms="7883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoRedirectsHome -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:53:18 IST" name="afterMethod" finished-at="2025-10-27T09:53:33 IST" duration-ms="14391" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoRedirectsHome status=SUCCESS method=NavigationUITests.logoRedirectsHome()[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:53:33 IST" name="setupMethod" finished-at="2025-10-27T09:53:49 IST" duration-ms="16284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:53:49 IST" name="startTest" finished-at="2025-10-27T09:53:49 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:53:49 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-27T09:54:00 IST" duration-ms="10064" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Accounts Overview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[overview.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.AccountPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:54:00 IST" name="afterMethod" finished-at="2025-10-27T09:54:10 IST" duration-ms="10947" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:54:10 IST" name="setupMethod" finished-at="2025-10-27T09:54:25 IST" duration-ms="14890" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:54:25 IST" name="startTest" finished-at="2025-10-27T09:54:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:54:25 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-27T09:54:34 IST" duration-ms="8577" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Transfer Funds]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[transfer.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.TransferPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:54:34 IST" name="afterMethod" finished-at="2025-10-27T09:54:40 IST" duration-ms="6185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:54:40 IST" name="setupMethod" finished-at="2025-10-27T09:54:48 IST" duration-ms="8228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:54:48 IST" name="startTest" finished-at="2025-10-27T09:54:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:54:48 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-27T09:54:57 IST" duration-ms="9071" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Request Loan]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[requestloan.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.LoanPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:54:57 IST" name="afterMethod" finished-at="2025-10-27T09:55:03 IST" duration-ms="5172" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:03 IST" name="setupMethod" finished-at="2025-10-27T09:55:09 IST" duration-ms="6540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:09 IST" name="startTest" finished-at="2025-10-27T09:55:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:09 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-27T09:55:17 IST" duration-ms="7545" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Contact Us]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[contact.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.ContactPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:17 IST" name="afterMethod" finished-at="2025-10-27T09:55:18 IST" duration-ms="1715" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:18 IST" name="setupMethod" finished-at="2025-10-27T09:55:25 IST" duration-ms="6692" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:25 IST" name="startTest" finished-at="2025-10-27T09:55:25 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.validateAlertBoxContent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="validateAlertBoxContent()[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:25 IST" name="validateAlertBoxContent" finished-at="2025-10-27T09:55:30 IST" duration-ms="4640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAlertBoxContent -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:30 IST" name="afterMethod" finished-at="2025-10-27T09:55:33 IST" duration-ms="3719" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAlertBoxContent status=SUCCESS method=NavigationUITests.validateAlertBoxContent()[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:33 IST" name="setupMethod" finished-at="2025-10-27T09:55:40 IST" duration-ms="6879" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:40 IST" name="startTest" finished-at="2025-10-27T09:55:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.validateButtonsAreClickable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="validateButtonsAreClickable()[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:40 IST" name="validateButtonsAreClickable" finished-at="2025-10-27T09:55:47 IST" duration-ms="6835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateButtonsAreClickable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:47 IST" name="afterMethod" finished-at="2025-10-27T09:55:49 IST" duration-ms="1347" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateButtonsAreClickable status=SUCCESS method=NavigationUITests.validateButtonsAreClickable()[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:49 IST" name="setupMethod" finished-at="2025-10-27T09:55:53 IST" duration-ms="4901" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:53 IST" name="startTest" finished-at="2025-10-27T09:55:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.verifyFontAndAlignment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyFontAndAlignment()[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:53 IST" name="verifyFontAndAlignment" finished-at="2025-10-27T09:55:58 IST" duration-ms="4924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFontAndAlignment -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89]" started-at="2025-10-27T09:55:58 IST" name="afterMethod" finished-at="2025-10-27T09:55:59 IST" duration-ms="985" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFontAndAlignment status=SUCCESS method=NavigationUITests.verifyFontAndAlignment()[pri:0, instance:com.fintech.tests.NavigationUITests@2898ac89] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.NavigationUITests -->
      <class name="com.fintech.tests.TransferTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:51:43 IST" name="beforeClassLog" finished-at="2025-10-27T09:51:43 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupAccountsOnce()[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:51:43 IST" name="setupAccountsOnce" finished-at="2025-10-27T09:51:43 IST" duration-ms="39" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAccountsOnce -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:51:46 IST" name="setupMethod" finished-at="2025-10-27T09:52:40 IST" duration-ms="53896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:52:40 IST" name="startTest" finished-at="2025-10-27T09:52:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:52:40 IST" name="setupTransferContext" finished-at="2025-10-27T09:52:40 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:52:40 IST" name="validateFundsTransfer" data-provider="transferDataJson" finished-at="2025-10-27T09:52:40 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[VALID_TRANSFER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.00]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFundsTransfer -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:52:40 IST" name="afterMethod" finished-at="2025-10-27T09:52:58 IST" duration-ms="18089" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFundsTransfer status=SKIP method=TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:52:58 IST" name="setupMethod" finished-at="2025-10-27T09:53:16 IST" duration-ms="17394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:16 IST" name="startTest" finished-at="2025-10-27T09:53:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:16 IST" name="setupTransferContext" finished-at="2025-10-27T09:53:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:16 IST" name="validateFundsTransfer" data-provider="transferDataJson" finished-at="2025-10-27T09:53:16 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[SAME_ACCOUNT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFundsTransfer -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:16 IST" name="afterMethod" finished-at="2025-10-27T09:53:22 IST" duration-ms="6537" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFundsTransfer status=SKIP method=TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:22 IST" name="setupMethod" finished-at="2025-10-27T09:53:35 IST" duration-ms="12374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:35 IST" name="startTest" finished-at="2025-10-27T09:53:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:35 IST" name="setupTransferContext" finished-at="2025-10-27T09:53:35 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:35 IST" name="validateFundsTransfer" data-provider="transferDataJson" finished-at="2025-10-27T09:53:35 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMPTY_FIELDS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.00]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFundsTransfer -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:35 IST" name="afterMethod" finished-at="2025-10-27T09:53:44 IST" duration-ms="9429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFundsTransfer status=SKIP method=TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:44 IST" name="setupMethod" finished-at="2025-10-27T09:53:58 IST" duration-ms="13851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:58 IST" name="startTest" finished-at="2025-10-27T09:53:58 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateSimpleTransferSuccess()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:58 IST" name="setupTransferContext" finished-at="2025-10-27T09:53:58 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateSimpleTransferSuccess()[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:58 IST" name="validateSimpleTransferSuccess" finished-at="2025-10-27T09:53:58 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSimpleTransferSuccess -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@15ca7889]" started-at="2025-10-27T09:53:58 IST" name="afterMethod" finished-at="2025-10-27T09:54:21 IST" duration-ms="23281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSimpleTransferSuccess status=SKIP method=TransferTests.validateSimpleTransferSuccess()[pri:0, instance:com.fintech.tests.TransferTests@15ca7889] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.TransferTests -->
      <class name="com.fintech.tests.AuthTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:51:43 IST" name="beforeClassLog" finished-at="2025-10-27T09:51:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:51:51 IST" name="setupMethod" finished-at="2025-10-27T09:52:37 IST" duration-ms="45680" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:52:37 IST" name="startTest" finished-at="2025-10-27T09:52:37 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:52:37 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-27T09:53:00 IST" duration-ms="22646" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SUCCESS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:53:00 IST" name="afterMethod" finished-at="2025-10-27T09:53:19 IST" duration-ms="18919" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:53:19 IST" name="setupMethod" finished-at="2025-10-27T09:53:28 IST" duration-ms="9860" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:53:28 IST" name="startTest" finished-at="2025-10-27T09:53:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:53:28 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-27T09:56:26 IST" duration-ms="177374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[alice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:56:26 IST" name="afterMethod" finished-at="2025-10-27T09:56:30 IST" duration-ms="3689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:56:30 IST" name="setupMethod" finished-at="2025-10-27T09:56:36 IST" duration-ms="6358" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:56:36 IST" name="startTest" finished-at="2025-10-27T09:56:36 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:56:36 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-27T09:59:24 IST" duration-ms="168005" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:59:24 IST" name="afterMethod" finished-at="2025-10-27T09:59:25 IST" duration-ms="786" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:59:25 IST" name="setupMethod" finished-at="2025-10-27T09:59:30 IST" duration-ms="4938" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:59:30 IST" name="startTest" finished-at="2025-10-27T09:59:30 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T09:59:30 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-27T10:02:17 IST" duration-ms="167771" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[notexist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[USER_NOT_EXIST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:02:17 IST" name="afterMethod" finished-at="2025-10-27T10:02:19 IST" duration-ms="1178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:02:19 IST" name="setupMethod" finished-at="2025-10-27T10:02:24 IST" duration-ms="5637" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:02:24 IST" name="startTest" finished-at="2025-10-27T10:02:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:02:24 IST" name="logoutAfterLogin" data-provider="userCredentials" finished-at="2025-10-27T10:02:52 IST" duration-ms="27435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAfterLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:02:52 IST" name="afterMethod" finished-at="2025-10-27T10:02:52 IST" duration-ms="793" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutAfterLogin status=SUCCESS method=AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:02:52 IST" name="setupMethod" finished-at="2025-10-27T10:02:59 IST" duration-ms="6948" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:02:59 IST" name="startTest" finished-at="2025-10-27T10:02:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:02:59 IST" name="logoutAfterLogin" data-provider="userCredentials" finished-at="2025-10-27T10:06:21 IST" duration-ms="201736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAfterLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:06:21 IST" name="afterMethod" finished-at="2025-10-27T10:06:21 IST" duration-ms="120" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutAfterLogin status=SUCCESS method=AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:06:21 IST" name="setupMethod" finished-at="2025-10-27T10:06:33 IST" duration-ms="11263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:06:33 IST" name="startTest" finished-at="2025-10-27T10:06:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:06:33 IST" name="logoutAfterLogin" data-provider="userCredentials" finished-at="2025-10-27T10:07:29 IST" duration-ms="56059" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[notexist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.name: username' (tried for 15 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.name: username' (tried for 15 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at com.fintech.pages.BasePage.waitForVisibility(BasePage.java:179)
at com.fintech.pages.LoginPage.open(LoginPage.java:58)
at com.fintech.tests.AuthTests.logoutAfterLogin(AuthTests.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"*[name='username']"}
  (Session info: chrome=141.0.7390.122)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [d909e4d8936c7c19c3ea9a184de87137, findElement {using=name, value=username}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.122, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51179}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51179/devtoo..., se:cdpVersion: 141.0.7390.122, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: d909e4d8936c7c19c3ea9a184de87137
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:354)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy21.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:204)
... 19 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAfterLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:07:29 IST" name="afterMethod" finished-at="2025-10-27T10:07:31 IST" duration-ms="2073" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutAfterLogin status=FAILURE method=AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:07:31 IST" name="setupMethod" finished-at="2025-10-27T10:07:36 IST" duration-ms="5090" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:07:36 IST" name="startTest" finished-at="2025-10-27T10:07:36 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.sessionTimeoutSimulation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:07:36 IST" name="sessionTimeoutSimulation" finished-at="2025-10-27T10:12:46 IST" duration-ms="310703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sessionTimeoutSimulation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e]" started-at="2025-10-27T10:12:46 IST" name="afterMethod" finished-at="2025-10-27T10:12:47 IST" duration-ms="720" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sessionTimeoutSimulation status=SUCCESS method=AuthTests.sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.AuthTests@192c3f1e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.AuthTests -->
    </test> <!-- ChromeRun -->
    <test started-at="2025-10-27T10:12:47 IST" name="EdgeRun" finished-at="2025-10-27T11:04:04 IST" duration-ms="3076757">
      <class name="com.fintech.tests.LoginTests">
        <test-method is-config="true" signature="initReport()[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T09:51:43 IST" name="initReport" finished-at="2025-10-27T09:51:43 IST" duration-ms="608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initReport -->
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:12:47 IST" name="beforeClassLog" finished-at="2025-10-27T10:12:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:12:48 IST" name="setupMethod" finished-at="2025-10-27T10:18:18 IST" duration-ms="330312" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:18:18 IST" name="startTest" finished-at="2025-10-27T10:18:18 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:18:18 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-27T10:18:40 IST" duration-ms="21680" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SUCCESS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:18:40 IST" name="afterMethod" finished-at="2025-10-27T10:18:42 IST" duration-ms="2489" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:18:42 IST" name="setupMethod" finished-at="2025-10-27T10:24:10 IST" duration-ms="327898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:24:10 IST" name="startTest" finished-at="2025-10-27T10:24:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:24:10 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-27T10:27:14 IST" duration-ms="183851" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:27:14 IST" name="afterMethod" finished-at="2025-10-27T10:27:30 IST" duration-ms="16432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:27:30 IST" name="setupMethod" finished-at="2025-10-27T10:32:24 IST" duration-ms="293417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:32:24 IST" name="startTest" finished-at="2025-10-27T10:32:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:32:24 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-27T10:35:38 IST" duration-ms="194680" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[notexist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[any]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[USER_NOT_EXIST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:35:38 IST" name="afterMethod" finished-at="2025-10-27T10:35:39 IST" duration-ms="613" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:35:39 IST" name="setupMethod" finished-at="2025-10-27T10:36:51 IST" duration-ms="72170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:36:51 IST" name="startTest" finished-at="2025-10-27T10:36:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:36:51 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-27T10:40:05 IST" duration-ms="193524" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[EMPTY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:40:05 IST" name="afterMethod" finished-at="2025-10-27T10:40:05 IST" duration-ms="378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:40:05 IST" name="setupMethod" finished-at="2025-10-27T10:40:30 IST" duration-ms="25087" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:40:30 IST" name="startTest" finished-at="2025-10-27T10:40:30 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:40:30 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-27T10:44:03 IST" duration-ms="212455" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user@com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID_EMAIL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:44:03 IST" name="afterMethod" finished-at="2025-10-27T10:44:03 IST" duration-ms="471" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:44:03 IST" name="setupMethod" finished-at="2025-10-27T10:44:44 IST" duration-ms="40807" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:44:44 IST" name="startTest" finished-at="2025-10-27T10:44:44 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.passwordMasking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="passwordMasking()[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:44:44 IST" name="passwordMasking" finished-at="2025-10-27T10:45:25 IST" duration-ms="41481" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: net::ERR_CONNECTION_CLOSED
  (Session info: MicrosoftEdge=141.0.3537.85)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [9db82d139ebac4ca3a4aabc064a36b32, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:62884}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62884/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9db82d139ebac4ca3a4aabc064a36b32]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: net::ERR_CONNECTION_CLOSED
  (Session info: MicrosoftEdge=141.0.3537.85)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [9db82d139ebac4ca3a4aabc064a36b32, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:62884}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62884/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9db82d139ebac4ca3a4aabc064a36b32
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:305)
at com.fintech.pages.BasePage.navigateTo(BasePage.java:27)
at com.fintech.pages.LoginPage.open(LoginPage.java:54)
at com.fintech.tests.LoginTests.passwordMasking(LoginTests.java:39)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordMasking -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:45:25 IST" name="afterMethod" finished-at="2025-10-27T10:45:26 IST" duration-ms="956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passwordMasking status=FAILURE method=LoginTests.passwordMasking()[pri:0, instance:com.fintech.tests.LoginTests@87a85e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:45:26 IST" name="setupMethod" finished-at="2025-10-27T10:45:51 IST" duration-ms="24457" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method signature="rememberMeSimulation()[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:45:51 IST" name="rememberMeSimulation" finished-at="2025-10-27T10:46:06 IST" duration-ms="15376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rememberMeSimulation -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:45:51 IST" name="startTest" finished-at="2025-10-27T10:45:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.rememberMeSimulation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:46:06 IST" name="afterMethod" finished-at="2025-10-27T10:46:07 IST" duration-ms="514" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rememberMeSimulation status=SUCCESS method=LoginTests.rememberMeSimulation()[pri:0, instance:com.fintech.tests.LoginTests@87a85e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:46:07 IST" name="setupMethod" finished-at="2025-10-27T10:51:15 IST" duration-ms="308621" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:51:15 IST" name="startTest" finished-at="2025-10-27T10:51:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.sessionTimeoutSimulation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:51:15 IST" name="sessionTimeoutSimulation" finished-at="2025-10-27T10:52:10 IST" duration-ms="54343" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sessionTimeoutSimulation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T10:52:10 IST" name="afterMethod" finished-at="2025-10-27T10:52:10 IST" duration-ms="515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sessionTimeoutSimulation status=SUCCESS method=LoginTests.sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.LoginTests@87a85e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="finishReport()[pri:0, instance:com.fintech.tests.LoginTests@87a85e1]" started-at="2025-10-27T11:04:04 IST" name="finishReport" finished-at="2025-10-27T11:04:09 IST" duration-ms="4932" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finishReport -->
      </class> <!-- com.fintech.tests.LoginTests -->
      <class name="com.fintech.tests.LoanTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:33:14 IST" name="beforeClassLog" finished-at="2025-10-27T10:33:14 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:33:14 IST" name="setupMethod" finished-at="2025-10-27T10:34:48 IST" duration-ms="93951" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:34:48 IST" name="startTest" finished-at="2025-10-27T10:34:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoanTests.testLoanTyping()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testLoanTyping()[pri:1, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:34:48 IST" name="testLoanTyping" finished-at="2025-10-27T10:34:48 IST" duration-ms="56" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Session ended]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Session ended
at com.fintech.tests.LoanTests.testLoanTyping(LoanTests.java:241)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoanTyping -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:34:48 IST" name="afterMethod" finished-at="2025-10-27T10:34:49 IST" duration-ms="931" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoanTyping status=SKIP method=LoanTests.testLoanTyping()[pri:1, instance:com.fintech.tests.LoanTests@609db43b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:34:49 IST" name="setupMethod" finished-at="2025-10-27T10:36:53 IST" duration-ms="124116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:36:53 IST" name="startTest" finished-at="2025-10-27T10:36:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoanTests.submitValidLoanRequest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="submitValidLoanRequest()[pri:2, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:36:53 IST" name="submitValidLoanRequest" finished-at="2025-10-27T10:36:53 IST" duration-ms="10" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Session ended]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Session ended
at com.fintech.tests.LoanTests.submitValidLoanRequest(LoanTests.java:176)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitValidLoanRequest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:36:53 IST" name="afterMethod" finished-at="2025-10-27T10:37:01 IST" duration-ms="7920" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitValidLoanRequest status=SKIP method=LoanTests.submitValidLoanRequest()[pri:2, instance:com.fintech.tests.LoanTests@609db43b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:37:01 IST" name="setupMethod" finished-at="2025-10-27T10:42:08 IST" duration-ms="306482" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:42:08 IST" name="startTest" finished-at="2025-10-27T10:42:08 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoanTests.applyLoan(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="applyLoan(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Boolean)[pri:3, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:42:08 IST" name="applyLoan" data-provider="loanDataExcel" finished-at="2025-10-27T10:42:08 IST" duration-ms="11" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Missing Info]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Session ended]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Session ended
at com.fintech.tests.LoanTests.applyLoan(LoanTests.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applyLoan -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoanTests@609db43b]" started-at="2025-10-27T10:42:08 IST" name="afterMethod" finished-at="2025-10-27T10:42:08 IST" duration-ms="640" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applyLoan status=SKIP method=LoanTests.applyLoan(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Boolean)[pri:3, instance:com.fintech.tests.LoanTests@609db43b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.LoanTests -->
      <class name="com.fintech.tests.AccountTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:12:47 IST" name="beforeClassLog" finished-at="2025-10-27T10:12:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:12:48 IST" name="setupMethod" finished-at="2025-10-27T10:18:28 IST" duration-ms="340314" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:18:28 IST" name="startTest" finished-at="2025-10-27T10:18:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:18:28 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-27T10:18:59 IST" duration-ms="30813" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Balance update after transfer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14455]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10/01/2025]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10/01/2025]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Date]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Ascending]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[4392.93]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[⚠️ Balance element not found or stale]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: ⚠️ Balance element not found or stale
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:160)
at com.fintech.pages.AccountPage.getBalance(AccountPage.java:169)
at com.fintech.tests.AccountTests.testAccountFunctionality(AccountTests.java:367)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //table[@id='accountTable']//tr[td[a[contains(@href,'activity.htm?id=')]]]//td[2] (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:61088}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61088/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 96a9ff39f4dd0af754723dff5299f112
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at com.fintech.pages.BasePage.waitForVisibility(BasePage.java:191)
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:146)
... 18 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:18:59 IST" name="resetBrowser" finished-at="2025-10-27T10:19:01 IST" duration-ms="1759" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:19:01 IST" name="afterMethod" finished-at="2025-10-27T10:19:02 IST" duration-ms="1327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SKIP method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@5552768b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:19:02 IST" name="setupMethod" finished-at="2025-10-27T10:24:27 IST" duration-ms="324937" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:24:27 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-27T10:26:08 IST" duration-ms="100768" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Filter transactions by date range]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[09/01/2025]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[09/30/2025]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:24:27 IST" name="startTest" finished-at="2025-10-27T10:24:27 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:26:08 IST" name="resetBrowser" finished-at="2025-10-27T10:26:11 IST" duration-ms="3121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:26:11 IST" name="afterMethod" finished-at="2025-10-27T10:26:19 IST" duration-ms="8562" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SUCCESS method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@5552768b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:26:19 IST" name="setupMethod" finished-at="2025-10-27T10:32:36 IST" duration-ms="377112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:32:36 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-27T10:33:42 IST" duration-ms="65707" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sort transactions by date/amount]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Date]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Ascending]]>
              </value>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:32:36 IST" name="startTest" finished-at="2025-10-27T10:32:36 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:33:42 IST" name="resetBrowser" finished-at="2025-10-27T10:33:44 IST" duration-ms="1497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:33:44 IST" name="afterMethod" finished-at="2025-10-27T10:33:45 IST" duration-ms="971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SUCCESS method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@5552768b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:33:45 IST" name="setupMethod" finished-at="2025-10-27T10:35:38 IST" duration-ms="113187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:35:38 IST" name="startTest" finished-at="2025-10-27T10:35:38 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:35:38 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-27T10:36:06 IST" duration-ms="28682" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validate account summary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2942.93]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[⚠️ Balance element not found or stale]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: ⚠️ Balance element not found or stale
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:160)
at com.fintech.tests.AccountTests.testAccountFunctionality(AccountTests.java:459)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //table[@id='accountTable']//tr[td[a[contains(@href,'activity.htm?id=')]]]//td[2] (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:62200}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62200/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 9b6ce2ac37ceb37b95d813456f0dbd7a
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at com.fintech.pages.BasePage.waitForVisibility(BasePage.java:191)
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:146)
... 17 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:36:06 IST" name="resetBrowser" finished-at="2025-10-27T10:36:08 IST" duration-ms="1524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:36:08 IST" name="afterMethod" finished-at="2025-10-27T10:36:09 IST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SKIP method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@5552768b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:36:09 IST" name="setupMethod" finished-at="2025-10-27T10:36:53 IST" duration-ms="44395" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:36:53 IST" name="startTest" finished-at="2025-10-27T10:36:53 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testBalanceUpdateAfterTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testBalanceUpdateAfterTransaction()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:36:53 IST" name="testBalanceUpdateAfterTransaction" finished-at="2025-10-27T10:37:22 IST" duration-ms="28704" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[⚠️ Balance element not found or stale]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: ⚠️ Balance element not found or stale
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:160)
at com.fintech.pages.AccountPage.getBalance(AccountPage.java:169)
at com.fintech.tests.AccountTests.testBalanceUpdateAfterTransaction(AccountTests.java:130)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //table[@id='accountTable']//tr[td[a[contains(@href,'activity.htm?id=')]]]//td[2] (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:62305}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62305/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ade7751899992b734db992d62e8a429c
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at com.fintech.pages.BasePage.waitForVisibility(BasePage.java:191)
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:146)
... 18 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBalanceUpdateAfterTransaction -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:37:22 IST" name="resetBrowser" finished-at="2025-10-27T10:37:35 IST" duration-ms="12443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:37:35 IST" name="afterMethod" finished-at="2025-10-27T10:37:36 IST" duration-ms="1035" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBalanceUpdateAfterTransaction status=SKIP method=AccountTests.testBalanceUpdateAfterTransaction()[pri:0, instance:com.fintech.tests.AccountTests@5552768b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:37:36 IST" name="setupMethod" finished-at="2025-10-27T10:38:28 IST" duration-ms="52046" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:38:28 IST" name="startTest" finished-at="2025-10-27T10:38:28 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testCheckingAccountSummary()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testCheckingAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:38:28 IST" name="testCheckingAccountSummary" finished-at="2025-10-27T10:39:39 IST" duration-ms="71755" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[timeout: Timed out receiving message from renderer: 33.384
  (Session info: MicrosoftEdge=141.0.3537.85)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [fafa3e946cd51eb37f396477c5739f9a, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:62529}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62529/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fafa3e946cd51eb37f396477c5739f9a]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: timeout: Timed out receiving message from renderer: 33.384
  (Session info: MicrosoftEdge=141.0.3537.85)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [fafa3e946cd51eb37f396477c5739f9a, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:62529}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:62529/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: fafa3e946cd51eb37f396477c5739f9a
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:305)
at com.fintech.pages.BasePage.navigateTo(BasePage.java:27)
at com.fintech.pages.LoginPage.open(LoginPage.java:54)
at com.fintech.tests.AccountTests.loginAsJohn(AccountTests.java:33)
at com.fintech.tests.AccountTests.testCheckingAccountSummary(AccountTests.java:59)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckingAccountSummary -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:39:39 IST" name="resetBrowser" finished-at="2025-10-27T10:40:09 IST" duration-ms="29438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:40:09 IST" name="afterMethod" finished-at="2025-10-27T10:40:10 IST" duration-ms="749" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckingAccountSummary status=FAILURE method=AccountTests.testCheckingAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@5552768b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:40:10 IST" name="setupMethod" finished-at="2025-10-27T10:45:05 IST" duration-ms="295505" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:45:05 IST" name="startTest" finished-at="2025-10-27T10:45:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testFullTransactionHistory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testFullTransactionHistory()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:45:05 IST" name="testFullTransactionHistory" finished-at="2025-10-27T10:46:28 IST" duration-ms="82714" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Transaction history should be visible expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Transaction history should be visible expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.fintech.tests.AccountTests.testFullTransactionHistory(AccountTests.java:236)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullTransactionHistory -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:46:28 IST" name="resetBrowser" finished-at="2025-10-27T10:46:30 IST" duration-ms="2297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:46:30 IST" name="afterMethod" finished-at="2025-10-27T10:46:31 IST" duration-ms="791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFullTransactionHistory status=FAILURE method=AccountTests.testFullTransactionHistory()[pri:0, instance:com.fintech.tests.AccountTests@5552768b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:46:31 IST" name="setupMethod" finished-at="2025-10-27T10:51:39 IST" duration-ms="308418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:51:39 IST" name="startTest" finished-at="2025-10-27T10:51:39 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testSavingsAccountSummary()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testSavingsAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:51:39 IST" name="testSavingsAccountSummary" finished-at="2025-10-27T10:51:55 IST" duration-ms="15511" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSavingsAccountSummary -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:51:55 IST" name="resetBrowser" finished-at="2025-10-27T10:51:57 IST" duration-ms="2496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:51:57 IST" name="afterMethod" finished-at="2025-10-27T10:51:58 IST" duration-ms="481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSavingsAccountSummary status=SUCCESS method=AccountTests.testSavingsAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@5552768b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:51:58 IST" name="setupMethod" finished-at="2025-10-27T10:54:55 IST" duration-ms="176937" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:54:55 IST" name="startTest" finished-at="2025-10-27T10:54:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testTransactionDetailsFormat()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testTransactionDetailsFormat()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:54:55 IST" name="testTransactionDetailsFormat" finished-at="2025-10-27T10:55:42 IST" duration-ms="47449" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionDetailsFormat -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:55:42 IST" name="resetBrowser" finished-at="2025-10-27T10:55:44 IST" duration-ms="1468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:55:44 IST" name="afterMethod" finished-at="2025-10-27T10:55:45 IST" duration-ms="1002" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTransactionDetailsFormat status=SUCCESS method=AccountTests.testTransactionDetailsFormat()[pri:0, instance:com.fintech.tests.AccountTests@5552768b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:55:45 IST" name="setupMethod" finished-at="2025-10-27T10:56:55 IST" duration-ms="70616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:56:55 IST" name="startTest" finished-at="2025-10-27T10:56:55 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testTransactionFilterByDateRange()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testTransactionFilterByDateRange()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:56:55 IST" name="testTransactionFilterByDateRange" finished-at="2025-10-27T10:58:35 IST" duration-ms="99674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionFilterByDateRange -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:58:35 IST" name="resetBrowser" finished-at="2025-10-27T10:58:39 IST" duration-ms="3588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:58:39 IST" name="afterMethod" finished-at="2025-10-27T10:58:48 IST" duration-ms="9836" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTransactionFilterByDateRange status=SUCCESS method=AccountTests.testTransactionFilterByDateRange()[pri:0, instance:com.fintech.tests.AccountTests@5552768b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T10:58:48 IST" name="setupMethod" finished-at="2025-10-27T11:00:35 IST" duration-ms="106799" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method signature="testTransactionSortingByDateAndAmount()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T11:00:35 IST" name="testTransactionSortingByDateAndAmount" finished-at="2025-10-27T11:01:39 IST" duration-ms="63590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionSortingByDateAndAmount -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T11:00:35 IST" name="startTest" finished-at="2025-10-27T11:00:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testTransactionSortingByDateAndAmount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T11:01:39 IST" name="resetBrowser" finished-at="2025-10-27T11:01:40 IST" duration-ms="1412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@5552768b]" started-at="2025-10-27T11:01:40 IST" name="afterMethod" finished-at="2025-10-27T11:01:41 IST" duration-ms="507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTransactionSortingByDateAndAmount status=SUCCESS method=AccountTests.testTransactionSortingByDateAndAmount()[pri:0, instance:com.fintech.tests.AccountTests@5552768b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.AccountTests -->
      <class name="com.fintech.tests.ContactTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:12:47 IST" name="beforeClassLog" finished-at="2025-10-27T10:12:47 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:12:47 IST" name="setupMethod" finished-at="2025-10-27T10:18:20 IST" duration-ms="332425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:18:20 IST" name="startTest" finished-at="2025-10-27T10:18:20 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.openContactForm()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="openContactForm()[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:18:20 IST" name="openContactForm" finished-at="2025-10-27T10:18:35 IST" duration-ms="14844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openContactForm -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:18:35 IST" name="afterMethod" finished-at="2025-10-27T10:18:42 IST" duration-ms="6890" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openContactForm status=SUCCESS method=ContactTests.openContactForm()[pri:0, instance:com.fintech.tests.ContactTests@55f616cf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:18:42 IST" name="setupMethod" finished-at="2025-10-27T10:24:07 IST" duration-ms="325315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method signature="submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:24:07 IST" name="submitContactForm" data-provider="contactDataExcel" finished-at="2025-10-27T10:24:33 IST" duration-ms="26192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test User]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9.999999999E9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[This is a test message]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitContactForm -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:24:07 IST" name="startTest" finished-at="2025-10-27T10:24:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:24:33 IST" name="afterMethod" finished-at="2025-10-27T10:24:49 IST" duration-ms="15315" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitContactForm status=SUCCESS method=ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:24:49 IST" name="setupMethod" finished-at="2025-10-27T10:35:00 IST" duration-ms="611215" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [598bc5e4f578b06a2c8d516b284b4d18, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:61906}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61906/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 598bc5e4f578b06a2c8d516b284b4d18]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [598bc5e4f578b06a2c8d516b284b4d18, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:61906}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61906/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 598bc5e4f578b06a2c8d516b284b4d18
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:402)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:358)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:188)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:596)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:1039)
at com.fintech.tests.BaseTest.setupMethod(BaseTest.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:385)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:35:00 IST" name="startTest" finished-at="2025-10-27T10:35:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:35:00 IST" name="submitContactForm" data-provider="contactDataExcel" finished-at="2025-10-27T10:35:00 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [598bc5e4f578b06a2c8d516b284b4d18, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:61906}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61906/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 598bc5e4f578b06a2c8d516b284b4d18]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [598bc5e4f578b06a2c8d516b284b4d18, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:61906}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61906/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 598bc5e4f578b06a2c8d516b284b4d18
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:402)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:358)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:188)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:596)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:1039)
at com.fintech.tests.BaseTest.setupMethod(BaseTest.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:385)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitContactForm -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:35:00 IST" name="afterMethod" finished-at="2025-10-27T10:38:00 IST" duration-ms="180563" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitContactForm status=SKIP method=ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:38:00 IST" name="setupMethod" finished-at="2025-10-27T10:38:26 IST" duration-ms="26051" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:38:26 IST" name="startTest" finished-at="2025-10-27T10:38:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.verifyContactSuccessMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyContactSuccessMessage()[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:38:26 IST" name="verifyContactSuccessMessage" finished-at="2025-10-27T10:38:26 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[java.util.concurrent.TimeoutException
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [598bc5e4f578b06a2c8d516b284b4d18, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:61906}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61906/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 598bc5e4f578b06a2c8d516b284b4d18]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: java.util.concurrent.TimeoutException
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [598bc5e4f578b06a2c8d516b284b4d18, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.85, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:61906}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:61906/devtoo..., se:cdpVersion: 141.0.3537.85, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 598bc5e4f578b06a2c8d516b284b4d18
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:402)
at org.openqa.selenium.remote.http.AddSeleniumUserAgent.lambda$apply$0(AddSeleniumUserAgent.java:42)
at org.openqa.selenium.remote.http.Filter.lambda$andFinally$1(Filter.java:55)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute(JdkHttpClient.java:358)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:188)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:596)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:600)
at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:1039)
at com.fintech.tests.BaseTest.setupMethod(BaseTest.java:51)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:601)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.CompletableFuture.timedGet(CompletableFuture.java:1960)
at java.base/java.util.concurrent.CompletableFuture.get(CompletableFuture.java:2095)
at org.openqa.selenium.remote.http.jdk.JdkHttpClient.execute0(JdkHttpClient.java:385)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactSuccessMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@55f616cf]" started-at="2025-10-27T10:38:26 IST" name="afterMethod" finished-at="2025-10-27T10:38:28 IST" duration-ms="1733" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactSuccessMessage status=SKIP method=ContactTests.verifyContactSuccessMessage()[pri:0, instance:com.fintech.tests.ContactTests@55f616cf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.ContactTests -->
      <class name="com.fintech.tests.NavigationUITests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:12:47 IST" name="beforeClassLog" finished-at="2025-10-27T10:12:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:12:47 IST" name="setupMethod" finished-at="2025-10-27T10:18:19 IST" duration-ms="331770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:18:19 IST" name="startTest" finished-at="2025-10-27T10:18:19 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.checkParaBankConnectivity()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="checkParaBankConnectivity()[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:18:19 IST" name="checkParaBankConnectivity" finished-at="2025-10-27T10:18:25 IST" duration-ms="6240" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkParaBankConnectivity -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:18:25 IST" name="afterMethod" finished-at="2025-10-27T10:18:34 IST" duration-ms="8783" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkParaBankConnectivity status=SUCCESS method=NavigationUITests.checkParaBankConnectivity()[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:18:34 IST" name="setupMethod" finished-at="2025-10-27T10:23:49 IST" duration-ms="315020" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:23:49 IST" name="startTest" finished-at="2025-10-27T10:23:49 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.logoRedirectsHome()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoRedirectsHome()[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:23:49 IST" name="logoRedirectsHome" finished-at="2025-10-27T10:24:09 IST" duration-ms="19830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoRedirectsHome -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:24:09 IST" name="afterMethod" finished-at="2025-10-27T10:24:25 IST" duration-ms="16270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoRedirectsHome status=SUCCESS method=NavigationUITests.logoRedirectsHome()[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:24:25 IST" name="setupMethod" finished-at="2025-10-27T10:31:08 IST" duration-ms="402856" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:31:08 IST" name="startTest" finished-at="2025-10-27T10:31:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:31:08 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-27T10:31:19 IST" duration-ms="10566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Accounts Overview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[overview.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.AccountPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:31:19 IST" name="afterMethod" finished-at="2025-10-27T10:31:42 IST" duration-ms="23336" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:31:42 IST" name="setupMethod" finished-at="2025-10-27T10:33:09 IST" duration-ms="87018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:33:09 IST" name="startTest" finished-at="2025-10-27T10:33:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:33:09 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-27T10:33:18 IST" duration-ms="8872" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Transfer Funds]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[transfer.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.TransferPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:33:18 IST" name="afterMethod" finished-at="2025-10-27T10:33:19 IST" duration-ms="778" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:33:19 IST" name="setupMethod" finished-at="2025-10-27T10:36:53 IST" duration-ms="214217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:36:53 IST" name="startTest" finished-at="2025-10-27T10:36:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:36:53 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-27T10:37:06 IST" duration-ms="12815" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Request Loan]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[requestloan.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.LoanPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:37:06 IST" name="afterMethod" finished-at="2025-10-27T10:37:07 IST" duration-ms="1134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:37:07 IST" name="setupMethod" finished-at="2025-10-27T10:42:14 IST" duration-ms="306636" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:42:14 IST" name="startTest" finished-at="2025-10-27T10:42:14 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:42:14 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-27T10:42:23 IST" duration-ms="9626" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Contact Us]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[contact.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.ContactPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:42:23 IST" name="afterMethod" finished-at="2025-10-27T10:42:24 IST" duration-ms="795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:42:24 IST" name="setupMethod" finished-at="2025-10-27T10:42:49 IST" duration-ms="24407" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:42:49 IST" name="startTest" finished-at="2025-10-27T10:42:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.validateAlertBoxContent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="validateAlertBoxContent()[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:42:49 IST" name="validateAlertBoxContent" finished-at="2025-10-27T10:42:55 IST" duration-ms="6564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAlertBoxContent -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:42:55 IST" name="afterMethod" finished-at="2025-10-27T10:42:57 IST" duration-ms="1421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAlertBoxContent status=SUCCESS method=NavigationUITests.validateAlertBoxContent()[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:42:57 IST" name="setupMethod" finished-at="2025-10-27T10:45:06 IST" duration-ms="129421" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method signature="validateButtonsAreClickable()[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:45:06 IST" name="validateButtonsAreClickable" finished-at="2025-10-27T10:45:54 IST" duration-ms="48213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateButtonsAreClickable -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:45:06 IST" name="startTest" finished-at="2025-10-27T10:45:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.validateButtonsAreClickable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:45:54 IST" name="afterMethod" finished-at="2025-10-27T10:45:56 IST" duration-ms="1689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateButtonsAreClickable status=SUCCESS method=NavigationUITests.validateButtonsAreClickable()[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:45:56 IST" name="setupMethod" finished-at="2025-10-27T10:49:56 IST" duration-ms="239895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:49:56 IST" name="startTest" finished-at="2025-10-27T10:49:56 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.verifyFontAndAlignment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyFontAndAlignment()[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:49:56 IST" name="verifyFontAndAlignment" finished-at="2025-10-27T10:50:53 IST" duration-ms="57052" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFontAndAlignment -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4]" started-at="2025-10-27T10:50:53 IST" name="afterMethod" finished-at="2025-10-27T10:50:53 IST" duration-ms="523" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFontAndAlignment status=SUCCESS method=NavigationUITests.verifyFontAndAlignment()[pri:0, instance:com.fintech.tests.NavigationUITests@1356d4d4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.NavigationUITests -->
      <class name="com.fintech.tests.TransferTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:12:47 IST" name="beforeClassLog" finished-at="2025-10-27T10:12:47 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupAccountsOnce()[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:12:47 IST" name="setupAccountsOnce" finished-at="2025-10-27T10:12:47 IST" duration-ms="2" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAccountsOnce -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:12:47 IST" name="setupMethod" finished-at="2025-10-27T10:18:17 IST" duration-ms="329848" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:18:17 IST" name="startTest" finished-at="2025-10-27T10:18:17 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:18:17 IST" name="setupTransferContext" finished-at="2025-10-27T10:18:17 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:18:17 IST" name="validateFundsTransfer" data-provider="transferDataJson" finished-at="2025-10-27T10:18:17 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[VALID_TRANSFER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.00]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFundsTransfer -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:18:17 IST" name="afterMethod" finished-at="2025-10-27T10:18:22 IST" duration-ms="4938" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFundsTransfer status=SKIP method=TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:18:22 IST" name="setupMethod" finished-at="2025-10-27T10:23:35 IST" duration-ms="312630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:23:35 IST" name="startTest" finished-at="2025-10-27T10:23:35 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:23:35 IST" name="setupTransferContext" finished-at="2025-10-27T10:23:35 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:23:35 IST" name="validateFundsTransfer" data-provider="transferDataJson" finished-at="2025-10-27T10:23:35 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[SAME_ACCOUNT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFundsTransfer -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:23:35 IST" name="afterMethod" finished-at="2025-10-27T10:23:40 IST" duration-ms="4810" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFundsTransfer status=SKIP method=TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:23:40 IST" name="setupMethod" finished-at="2025-10-27T10:30:48 IST" duration-ms="428731" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:30:48 IST" name="startTest" finished-at="2025-10-27T10:30:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:30:48 IST" name="setupTransferContext" finished-at="2025-10-27T10:30:48 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:30:48 IST" name="validateFundsTransfer" data-provider="transferDataJson" finished-at="2025-10-27T10:30:48 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMPTY_FIELDS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.00]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFundsTransfer -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:30:48 IST" name="afterMethod" finished-at="2025-10-27T10:31:14 IST" duration-ms="25993" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFundsTransfer status=SKIP method=TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:31:14 IST" name="setupMethod" finished-at="2025-10-27T10:33:10 IST" duration-ms="115093" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:33:10 IST" name="startTest" finished-at="2025-10-27T10:33:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateSimpleTransferSuccess()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:33:10 IST" name="setupTransferContext" finished-at="2025-10-27T10:33:10 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateSimpleTransferSuccess()[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:33:10 IST" name="validateSimpleTransferSuccess" finished-at="2025-10-27T10:33:10 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSimpleTransferSuccess -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5]" started-at="2025-10-27T10:33:10 IST" name="afterMethod" finished-at="2025-10-27T10:33:14 IST" duration-ms="4386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSimpleTransferSuccess status=SKIP method=TransferTests.validateSimpleTransferSuccess()[pri:0, instance:com.fintech.tests.TransferTests@3c947bc5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.TransferTests -->
      <class name="com.fintech.tests.AuthTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:12:47 IST" name="beforeClassLog" finished-at="2025-10-27T10:12:47 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:12:48 IST" name="setupMethod" finished-at="2025-10-27T10:18:20 IST" duration-ms="332305" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:18:20 IST" name="startTest" finished-at="2025-10-27T10:18:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:18:20 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-27T10:18:39 IST" duration-ms="19493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SUCCESS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:18:39 IST" name="afterMethod" finished-at="2025-10-27T10:18:41 IST" duration-ms="1922" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:18:41 IST" name="setupMethod" finished-at="2025-10-27T10:24:05 IST" duration-ms="323957" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:24:05 IST" name="startTest" finished-at="2025-10-27T10:24:05 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:24:05 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-27T10:27:07 IST" duration-ms="182157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[alice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:27:07 IST" name="afterMethod" finished-at="2025-10-27T10:27:09 IST" duration-ms="1804" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:27:09 IST" name="setupMethod" finished-at="2025-10-27T10:32:03 IST" duration-ms="294181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:32:03 IST" name="startTest" finished-at="2025-10-27T10:32:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:32:03 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-27T10:35:07 IST" duration-ms="183351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:35:07 IST" name="afterMethod" finished-at="2025-10-27T10:35:07 IST" duration-ms="526" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:35:07 IST" name="setupMethod" finished-at="2025-10-27T10:36:52 IST" duration-ms="104925" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:36:52 IST" name="startTest" finished-at="2025-10-27T10:36:52 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:36:52 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-27T10:40:26 IST" duration-ms="214042" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[notexist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[USER_NOT_EXIST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:40:26 IST" name="afterMethod" finished-at="2025-10-27T10:40:28 IST" duration-ms="1517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:40:28 IST" name="setupMethod" finished-at="2025-10-27T10:43:26 IST" duration-ms="178034" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:43:26 IST" name="startTest" finished-at="2025-10-27T10:43:26 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:43:26 IST" name="logoutAfterLogin" data-provider="userCredentials" finished-at="2025-10-27T10:43:55 IST" duration-ms="28936" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAfterLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:43:55 IST" name="afterMethod" finished-at="2025-10-27T10:43:55 IST" duration-ms="580" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutAfterLogin status=SUCCESS method=AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:43:55 IST" name="setupMethod" finished-at="2025-10-27T10:45:05 IST" duration-ms="69996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method signature="logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:45:05 IST" name="logoutAfterLogin" data-provider="userCredentials" finished-at="2025-10-27T10:49:03 IST" duration-ms="237453" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAfterLogin -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:45:05 IST" name="startTest" finished-at="2025-10-27T10:45:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:49:03 IST" name="afterMethod" finished-at="2025-10-27T10:49:03 IST" duration-ms="538" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutAfterLogin status=SUCCESS method=AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:49:03 IST" name="setupMethod" finished-at="2025-10-27T10:53:13 IST" duration-ms="249978" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:53:13 IST" name="startTest" finished-at="2025-10-27T10:53:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:53:13 IST" name="logoutAfterLogin" data-provider="userCredentials" finished-at="2025-10-27T10:56:36 IST" duration-ms="202846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[notexist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAfterLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:56:36 IST" name="afterMethod" finished-at="2025-10-27T10:56:38 IST" duration-ms="1409" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutAfterLogin status=SUCCESS method=AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:56:38 IST" name="setupMethod" finished-at="2025-10-27T10:58:52 IST" duration-ms="134808" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:58:52 IST" name="startTest" finished-at="2025-10-27T10:58:52 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.sessionTimeoutSimulation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T10:58:52 IST" name="sessionTimeoutSimulation" finished-at="2025-10-27T11:04:03 IST" duration-ms="310759" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sessionTimeoutSimulation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@671a5887]" started-at="2025-10-27T11:04:03 IST" name="afterMethod" finished-at="2025-10-27T11:04:04 IST" duration-ms="1066" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sessionTimeoutSimulation status=SUCCESS method=AuthTests.sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.AuthTests@671a5887] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.AuthTests -->
    </test> <!-- EdgeRun -->
  </suite> <!-- ParaBankAutomationSuite -->
</testng-results>
