<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="94" passed="67" failed="6" skipped="21">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-10-28T00:51:50 IST" name="ParaBankAutomationSuite" finished-at="2025-10-28T01:35:49 IST" duration-ms="2638401">
    <groups>
      <group name="login">
        <method signature="LoginTests.passwordMasking()[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" name="passwordMasking" class="com.fintech.tests.LoginTests"/>
        <method signature="LoginTests.rememberMeSimulation()[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" name="rememberMeSimulation" class="com.fintech.tests.LoginTests"/>
        <method signature="LoginTests.sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" name="sessionTimeoutSimulation" class="com.fintech.tests.LoginTests"/>
        <method signature="LoginTests.passwordMasking()[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" name="passwordMasking" class="com.fintech.tests.LoginTests"/>
        <method signature="LoginTests.rememberMeSimulation()[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" name="rememberMeSimulation" class="com.fintech.tests.LoginTests"/>
        <method signature="LoginTests.sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" name="sessionTimeoutSimulation" class="com.fintech.tests.LoginTests"/>
      </group> <!-- login -->
    </groups>
    <test started-at="2025-10-28T00:51:50 IST" name="ChromeRun" finished-at="2025-10-28T01:30:03 IST" duration-ms="2292160">
      <class name="com.fintech.tests.LoginTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:52:20 IST" name="beforeClassLog" finished-at="2025-10-28T00:52:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:52:24 IST" name="setupMethod" finished-at="2025-10-28T00:52:36 IST" duration-ms="12109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:52:36 IST" name="startTest" finished-at="2025-10-28T00:52:36 IST" duration-ms="8" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:52:36 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-28T00:52:52 IST" duration-ms="15823" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SUCCESS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:52:52 IST" name="afterMethod" finished-at="2025-10-28T00:52:53 IST" duration-ms="762" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:52:53 IST" name="setupMethod" finished-at="2025-10-28T00:53:02 IST" duration-ms="9805" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:53:02 IST" name="startTest" finished-at="2025-10-28T00:53:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:53:02 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-28T00:53:29 IST" duration-ms="26091" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:53:29 IST" name="afterMethod" finished-at="2025-10-28T00:53:32 IST" duration-ms="3274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:53:32 IST" name="setupMethod" finished-at="2025-10-28T00:53:42 IST" duration-ms="10067" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:53:42 IST" name="startTest" finished-at="2025-10-28T00:53:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:53:42 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-28T00:54:08 IST" duration-ms="25770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[notexist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[any]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[USER_NOT_EXIST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:54:08 IST" name="afterMethod" finished-at="2025-10-28T00:54:09 IST" duration-ms="1175" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:54:09 IST" name="setupMethod" finished-at="2025-10-28T00:54:16 IST" duration-ms="7128" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:54:16 IST" name="startTest" finished-at="2025-10-28T00:54:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:54:16 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-28T00:54:38 IST" duration-ms="22236" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[EMPTY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:54:38 IST" name="afterMethod" finished-at="2025-10-28T00:54:40 IST" duration-ms="1747" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:54:40 IST" name="setupMethod" finished-at="2025-10-28T00:54:46 IST" duration-ms="6144" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:54:46 IST" name="startTest" finished-at="2025-10-28T00:54:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:54:46 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-28T00:55:05 IST" duration-ms="19277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user@com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID_EMAIL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T00:55:05 IST" name="afterMethod" finished-at="2025-10-28T00:55:07 IST" duration-ms="1167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T01:00:00 IST" name="setupMethod" finished-at="2025-10-28T01:00:11 IST" duration-ms="10477" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T01:00:11 IST" name="startTest" finished-at="2025-10-28T01:00:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.passwordMasking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="passwordMasking()[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T01:00:11 IST" name="passwordMasking" finished-at="2025-10-28T01:00:17 IST" duration-ms="6416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordMasking -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T01:00:17 IST" name="afterMethod" finished-at="2025-10-28T01:00:25 IST" duration-ms="8094" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passwordMasking status=SUCCESS method=LoginTests.passwordMasking()[pri:0, instance:com.fintech.tests.LoginTests@158a8276] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T01:00:25 IST" name="setupMethod" finished-at="2025-10-28T01:00:35 IST" duration-ms="10124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T01:00:35 IST" name="startTest" finished-at="2025-10-28T01:00:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.rememberMeSimulation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="rememberMeSimulation()[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T01:00:35 IST" name="rememberMeSimulation" finished-at="2025-10-28T01:01:03 IST" duration-ms="27378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rememberMeSimulation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T01:01:03 IST" name="afterMethod" finished-at="2025-10-28T01:01:06 IST" duration-ms="3296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rememberMeSimulation status=SUCCESS method=LoginTests.rememberMeSimulation()[pri:0, instance:com.fintech.tests.LoginTests@158a8276] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T01:01:06 IST" name="setupMethod" finished-at="2025-10-28T01:01:21 IST" duration-ms="15550" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T01:01:21 IST" name="startTest" finished-at="2025-10-28T01:01:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.sessionTimeoutSimulation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T01:01:21 IST" name="sessionTimeoutSimulation" finished-at="2025-10-28T01:01:50 IST" duration-ms="28446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sessionTimeoutSimulation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@158a8276]" started-at="2025-10-28T01:01:50 IST" name="afterMethod" finished-at="2025-10-28T01:01:59 IST" duration-ms="9349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sessionTimeoutSimulation status=SUCCESS method=LoginTests.sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.LoginTests@158a8276] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.LoginTests -->
      <class name="com.fintech.tests.LoanTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:28:33 IST" name="beforeClassLog" finished-at="2025-10-28T01:28:33 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:28:33 IST" name="setupMethod" finished-at="2025-10-28T01:28:42 IST" duration-ms="9073" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:28:42 IST" name="startTest" finished-at="2025-10-28T01:28:42 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoanTests.testLoanTyping()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testLoanTyping()[pri:1, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:28:42 IST" name="testLoanTyping" finished-at="2025-10-28T01:28:42 IST" duration-ms="181" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Session ended]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Session ended
at com.fintech.tests.LoanTests.testLoanTyping(LoanTests.java:241)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoanTyping -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:28:42 IST" name="afterMethod" finished-at="2025-10-28T01:28:58 IST" duration-ms="15434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoanTyping status=SKIP method=LoanTests.testLoanTyping()[pri:1, instance:com.fintech.tests.LoanTests@424e1977] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:28:58 IST" name="setupMethod" finished-at="2025-10-28T01:29:07 IST" duration-ms="9388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:29:07 IST" name="startTest" finished-at="2025-10-28T01:29:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoanTests.submitValidLoanRequest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="submitValidLoanRequest()[pri:2, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:29:07 IST" name="submitValidLoanRequest" finished-at="2025-10-28T01:29:07 IST" duration-ms="14" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Session ended]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Session ended
at com.fintech.tests.LoanTests.submitValidLoanRequest(LoanTests.java:176)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitValidLoanRequest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:29:07 IST" name="afterMethod" finished-at="2025-10-28T01:29:17 IST" duration-ms="10057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitValidLoanRequest status=SKIP method=LoanTests.submitValidLoanRequest()[pri:2, instance:com.fintech.tests.LoanTests@424e1977] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:29:17 IST" name="setupMethod" finished-at="2025-10-28T01:29:37 IST" duration-ms="20082" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:29:37 IST" name="startTest" finished-at="2025-10-28T01:29:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoanTests.applyLoan(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="applyLoan(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Boolean)[pri:3, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:29:37 IST" name="applyLoan" data-provider="loanDataExcel" finished-at="2025-10-28T01:29:37 IST" duration-ms="24" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Missing Info]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Session ended]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Session ended
at com.fintech.tests.LoanTests.applyLoan(LoanTests.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applyLoan -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoanTests@424e1977]" started-at="2025-10-28T01:29:37 IST" name="afterMethod" finished-at="2025-10-28T01:30:03 IST" duration-ms="25209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applyLoan status=SKIP method=LoanTests.applyLoan(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Boolean)[pri:3, instance:com.fintech.tests.LoanTests@424e1977] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.LoanTests -->
      <class name="com.fintech.tests.AccountTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:09:52 IST" name="beforeClassLog" finished-at="2025-10-28T01:09:52 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:09:53 IST" name="setupMethod" finished-at="2025-10-28T01:09:59 IST" duration-ms="6515" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:09:59 IST" name="startTest" finished-at="2025-10-28T01:09:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:09:59 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-28T01:10:29 IST" duration-ms="29540" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Balance update after transfer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14455]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10/01/2025]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10/01/2025]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Date]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Ascending]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[4392.93]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[⚠️ Balance element not found or stale]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: ⚠️ Balance element not found or stale
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:160)
at com.fintech.pages.AccountPage.getBalance(AccountPage.java:169)
at com.fintech.tests.AccountTests.testAccountFunctionality(AccountTests.java:367)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //table[@id='accountTable']//tr[td[a[contains(@href,'activity.htm?id=')]]]//td[2] (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.123, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52446}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52446/devtoo..., se:cdpVersion: 141.0.7390.123, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 79e9dcbeb6a46451913b40bbbf78821e
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at com.fintech.pages.BasePage.waitForVisibility(BasePage.java:194)
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:146)
... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:10:29 IST" name="resetBrowser" finished-at="2025-10-28T01:10:30 IST" duration-ms="1693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:10:30 IST" name="afterMethod" finished-at="2025-10-28T01:10:37 IST" duration-ms="6572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SKIP method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:10:37 IST" name="setupMethod" finished-at="2025-10-28T01:10:50 IST" duration-ms="13189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:10:50 IST" name="startTest" finished-at="2025-10-28T01:10:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:10:50 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-28T01:12:32 IST" duration-ms="102066" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Filter transactions by date range]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[09/01/2025]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[09/30/2025]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:12:32 IST" name="resetBrowser" finished-at="2025-10-28T01:12:34 IST" duration-ms="2188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:12:34 IST" name="afterMethod" finished-at="2025-10-28T01:12:36 IST" duration-ms="1275" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SUCCESS method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:12:36 IST" name="setupMethod" finished-at="2025-10-28T01:12:44 IST" duration-ms="8035" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:12:44 IST" name="startTest" finished-at="2025-10-28T01:12:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:12:44 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-28T01:13:38 IST" duration-ms="54136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sort transactions by date/amount]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Date]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Ascending]]>
              </value>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:13:38 IST" name="resetBrowser" finished-at="2025-10-28T01:13:40 IST" duration-ms="1720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:13:40 IST" name="afterMethod" finished-at="2025-10-28T01:13:52 IST" duration-ms="12677" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SUCCESS method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:13:52 IST" name="setupMethod" finished-at="2025-10-28T01:14:04 IST" duration-ms="11609" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:14:04 IST" name="startTest" finished-at="2025-10-28T01:14:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:14:04 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-28T01:14:35 IST" duration-ms="30969" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validate account summary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2942.93]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[⚠️ Balance element not found or stale]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: ⚠️ Balance element not found or stale
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:160)
at com.fintech.tests.AccountTests.testAccountFunctionality(AccountTests.java:459)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //table[@id='accountTable']//tr[td[a[contains(@href,'activity.htm?id=')]]]//td[2] (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.123, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53080}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53080/devtoo..., se:cdpVersion: 141.0.7390.123, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 38c3bafbe5631f8fbacd05d8415a2464
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at com.fintech.pages.BasePage.waitForVisibility(BasePage.java:194)
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:146)
... 21 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:14:35 IST" name="resetBrowser" finished-at="2025-10-28T01:14:37 IST" duration-ms="1892" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:14:37 IST" name="afterMethod" finished-at="2025-10-28T01:14:39 IST" duration-ms="2145" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SKIP method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:14:39 IST" name="setupMethod" finished-at="2025-10-28T01:14:53 IST" duration-ms="13902" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:14:53 IST" name="startTest" finished-at="2025-10-28T01:14:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testBalanceUpdateAfterTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testBalanceUpdateAfterTransaction()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:14:53 IST" name="testBalanceUpdateAfterTransaction" finished-at="2025-10-28T01:15:19 IST" duration-ms="26194" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of element located by By.id: newAccountId (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.123, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53183}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53183/devtoo..., se:cdpVersion: 141.0.7390.123, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ff101b8a46bb4c7dc6c7b1931b651701]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.id: newAccountId (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.123, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53183}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53183/devtoo..., se:cdpVersion: 141.0.7390.123, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: ff101b8a46bb4c7dc6c7b1931b651701
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at com.fintech.pages.BasePage.waitForVisibility(BasePage.java:194)
at com.fintech.pages.AccountPage.ensureTwoAccounts(AccountPage.java:83)
at com.fintech.tests.AccountTests.testBalanceUpdateAfterTransaction(AccountTests.java:123)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBalanceUpdateAfterTransaction -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:15:19 IST" name="resetBrowser" finished-at="2025-10-28T01:15:21 IST" duration-ms="1614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:15:21 IST" name="afterMethod" finished-at="2025-10-28T01:15:25 IST" duration-ms="3572" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBalanceUpdateAfterTransaction status=FAILURE method=AccountTests.testBalanceUpdateAfterTransaction()[pri:0, instance:com.fintech.tests.AccountTests@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:15:25 IST" name="setupMethod" finished-at="2025-10-28T01:15:32 IST" duration-ms="7687" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:15:32 IST" name="startTest" finished-at="2025-10-28T01:15:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testCheckingAccountSummary()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testCheckingAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:15:32 IST" name="testCheckingAccountSummary" finished-at="2025-10-28T01:15:45 IST" duration-ms="12618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckingAccountSummary -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:15:45 IST" name="resetBrowser" finished-at="2025-10-28T01:15:46 IST" duration-ms="1572" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:15:46 IST" name="afterMethod" finished-at="2025-10-28T01:15:47 IST" duration-ms="945" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckingAccountSummary status=SUCCESS method=AccountTests.testCheckingAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:15:47 IST" name="setupMethod" finished-at="2025-10-28T01:16:02 IST" duration-ms="14394" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:16:02 IST" name="startTest" finished-at="2025-10-28T01:16:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testFullTransactionHistory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testFullTransactionHistory()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:16:02 IST" name="testFullTransactionHistory" finished-at="2025-10-28T01:16:48 IST" duration-ms="46674" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Transaction history should be visible expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Transaction history should be visible expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.fintech.tests.AccountTests.testFullTransactionHistory(AccountTests.java:236)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullTransactionHistory -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:16:48 IST" name="resetBrowser" finished-at="2025-10-28T01:16:50 IST" duration-ms="1320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:16:50 IST" name="afterMethod" finished-at="2025-10-28T01:16:54 IST" duration-ms="4681" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFullTransactionHistory status=FAILURE method=AccountTests.testFullTransactionHistory()[pri:0, instance:com.fintech.tests.AccountTests@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:16:54 IST" name="setupMethod" finished-at="2025-10-28T01:17:01 IST" duration-ms="6100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:17:01 IST" name="startTest" finished-at="2025-10-28T01:17:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testSavingsAccountSummary()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testSavingsAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:17:01 IST" name="testSavingsAccountSummary" finished-at="2025-10-28T01:17:10 IST" duration-ms="9669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSavingsAccountSummary -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:17:10 IST" name="resetBrowser" finished-at="2025-10-28T01:17:12 IST" duration-ms="1470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:17:12 IST" name="afterMethod" finished-at="2025-10-28T01:17:21 IST" duration-ms="9693" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSavingsAccountSummary status=SUCCESS method=AccountTests.testSavingsAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:17:21 IST" name="setupMethod" finished-at="2025-10-28T01:17:29 IST" duration-ms="7952" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:17:29 IST" name="startTest" finished-at="2025-10-28T01:17:29 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testTransactionDetailsFormat()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testTransactionDetailsFormat()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:17:29 IST" name="testTransactionDetailsFormat" finished-at="2025-10-28T01:18:18 IST" duration-ms="48238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionDetailsFormat -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:18:18 IST" name="resetBrowser" finished-at="2025-10-28T01:18:19 IST" duration-ms="1881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:18:19 IST" name="afterMethod" finished-at="2025-10-28T01:18:21 IST" duration-ms="1502" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTransactionDetailsFormat status=SUCCESS method=AccountTests.testTransactionDetailsFormat()[pri:0, instance:com.fintech.tests.AccountTests@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:18:21 IST" name="setupMethod" finished-at="2025-10-28T01:18:27 IST" duration-ms="5590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:18:27 IST" name="startTest" finished-at="2025-10-28T01:18:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testTransactionFilterByDateRange()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testTransactionFilterByDateRange()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:18:27 IST" name="testTransactionFilterByDateRange" finished-at="2025-10-28T01:20:01 IST" duration-ms="94908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionFilterByDateRange -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:20:01 IST" name="resetBrowser" finished-at="2025-10-28T01:20:19 IST" duration-ms="17689" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: net::ERR_INTERNET_DISCONNECTED
  (Session info: chrome=141.0.7390.123)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [35bf49537ed9794e3c45b44c8c7cc7d6, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.123, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53831}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53831/devtoo..., se:cdpVersion: 141.0.7390.123, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 35bf49537ed9794e3c45b44c8c7cc7d6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: net::ERR_INTERNET_DISCONNECTED
  (Session info: chrome=141.0.7390.123)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [35bf49537ed9794e3c45b44c8c7cc7d6, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.123, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53831}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53831/devtoo..., se:cdpVersion: 141.0.7390.123, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 35bf49537ed9794e3c45b44c8c7cc7d6
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:325)
at com.fintech.tests.AccountTests.resetBrowser(AccountTests.java:472)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:20:19 IST" name="afterMethod" finished-at="2025-10-28T01:20:41 IST" duration-ms="22193" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTransactionFilterByDateRange status=SUCCESS method=AccountTests.testTransactionFilterByDateRange()[pri:0, instance:com.fintech.tests.AccountTests@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:20:41 IST" name="setupMethod" finished-at="2025-10-28T01:20:53 IST" duration-ms="11996" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:20:53 IST" name="startTest" finished-at="2025-10-28T01:20:53 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testTransactionSortingByDateAndAmount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testTransactionSortingByDateAndAmount()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:20:53 IST" name="testTransactionSortingByDateAndAmount" finished-at="2025-10-28T01:20:53 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: net::ERR_INTERNET_DISCONNECTED
  (Session info: chrome=141.0.7390.123)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [35bf49537ed9794e3c45b44c8c7cc7d6, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.123, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53831}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53831/devtoo..., se:cdpVersion: 141.0.7390.123, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 35bf49537ed9794e3c45b44c8c7cc7d6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: net::ERR_INTERNET_DISCONNECTED
  (Session info: chrome=141.0.7390.123)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [35bf49537ed9794e3c45b44c8c7cc7d6, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 141.0.7390.123, chrome: {chromedriverVersion: 141.0.7390.122 (b477534e7e1..., userDataDir: C:\Users\hp\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53831}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53831/devtoo..., se:cdpVersion: 141.0.7390.123, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 35bf49537ed9794e3c45b44c8c7cc7d6
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:325)
at com.fintech.tests.AccountTests.resetBrowser(AccountTests.java:472)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionSortingByDateAndAmount -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:20:54 IST" name="resetBrowser" finished-at="2025-10-28T01:20:54 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@291caca8]" started-at="2025-10-28T01:20:54 IST" name="afterMethod" finished-at="2025-10-28T01:21:09 IST" duration-ms="15750" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTransactionSortingByDateAndAmount status=SKIP method=AccountTests.testTransactionSortingByDateAndAmount()[pri:0, instance:com.fintech.tests.AccountTests@291caca8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.AccountTests -->
      <class name="com.fintech.tests.ContactTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T00:59:34 IST" name="beforeClassLog" finished-at="2025-10-28T00:59:34 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T00:59:34 IST" name="setupMethod" finished-at="2025-10-28T00:59:43 IST" duration-ms="8755" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T00:59:43 IST" name="startTest" finished-at="2025-10-28T00:59:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.openContactForm()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="openContactForm()[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T00:59:43 IST" name="openContactForm" finished-at="2025-10-28T00:59:57 IST" duration-ms="13593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openContactForm -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T00:59:57 IST" name="afterMethod" finished-at="2025-10-28T01:00:00 IST" duration-ms="3498" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openContactForm status=SUCCESS method=ContactTests.openContactForm()[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T01:08:00 IST" name="setupMethod" finished-at="2025-10-28T01:08:41 IST" duration-ms="41022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T01:08:41 IST" name="startTest" finished-at="2025-10-28T01:08:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T01:08:41 IST" name="submitContactForm" data-provider="contactDataExcel" finished-at="2025-10-28T01:08:53 IST" duration-ms="11897" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test User]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9.999999999E9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[This is a test message]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitContactForm -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T01:08:53 IST" name="afterMethod" finished-at="2025-10-28T01:09:02 IST" duration-ms="8883" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitContactForm status=SUCCESS method=ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T01:09:02 IST" name="setupMethod" finished-at="2025-10-28T01:09:33 IST" duration-ms="30854" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T01:09:33 IST" name="startTest" finished-at="2025-10-28T01:09:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T01:09:33 IST" name="submitContactForm" data-provider="contactDataExcel" finished-at="2025-10-28T01:09:42 IST" duration-ms="9270" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitContactForm -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T01:09:42 IST" name="afterMethod" finished-at="2025-10-28T01:09:52 IST" duration-ms="9423" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitContactForm status=SUCCESS method=ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T01:26:56 IST" name="setupMethod" finished-at="2025-10-28T01:27:07 IST" duration-ms="11459" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T01:27:07 IST" name="startTest" finished-at="2025-10-28T01:27:07 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.verifyContactSuccessMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyContactSuccessMessage()[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T01:27:07 IST" name="verifyContactSuccessMessage" finished-at="2025-10-28T01:27:26 IST" duration-ms="18376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactSuccessMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd]" started-at="2025-10-28T01:27:26 IST" name="afterMethod" finished-at="2025-10-28T01:27:43 IST" duration-ms="17064" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactSuccessMessage status=SUCCESS method=ContactTests.verifyContactSuccessMessage()[pri:0, instance:com.fintech.tests.ContactTests@10d68fcd] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.ContactTests -->
      <class name="com.fintech.tests.NavigationUITests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T00:51:51 IST" name="beforeClassLog" finished-at="2025-10-28T00:51:51 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T00:51:51 IST" name="setupMethod" finished-at="2025-10-28T00:52:11 IST" duration-ms="20188" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T00:52:11 IST" name="startTest" finished-at="2025-10-28T00:52:11 IST" duration-ms="124" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.checkParaBankConnectivity()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="checkParaBankConnectivity()[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T00:52:11 IST" name="checkParaBankConnectivity" finished-at="2025-10-28T00:52:17 IST" duration-ms="6608" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkParaBankConnectivity -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T00:52:17 IST" name="afterMethod" finished-at="2025-10-28T00:52:20 IST" duration-ms="2558" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkParaBankConnectivity status=SUCCESS method=NavigationUITests.checkParaBankConnectivity()[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T00:57:36 IST" name="setupMethod" finished-at="2025-10-28T00:57:41 IST" duration-ms="5654" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T00:57:41 IST" name="startTest" finished-at="2025-10-28T00:57:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.logoRedirectsHome()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoRedirectsHome()[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T00:57:41 IST" name="logoRedirectsHome" finished-at="2025-10-28T00:57:50 IST" duration-ms="8432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoRedirectsHome -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T00:57:50 IST" name="afterMethod" finished-at="2025-10-28T00:57:52 IST" duration-ms="1896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoRedirectsHome status=SUCCESS method=NavigationUITests.logoRedirectsHome()[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:21:09 IST" name="setupMethod" finished-at="2025-10-28T01:21:19 IST" duration-ms="9390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:21:19 IST" name="startTest" finished-at="2025-10-28T01:21:19 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:21:19 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-28T01:21:24 IST" duration-ms="5304" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Accounts Overview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[overview.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.AccountPage]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[❌ Network issue while navigating to login page]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ❌ Network issue while navigating to login page
at org.testng.Assert.fail(Assert.java:111)
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:144)
at com.fintech.tests.NavigationUITests.topNavLinksLoadPages(NavigationUITests.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:21:24 IST" name="afterMethod" finished-at="2025-10-28T01:21:28 IST" duration-ms="4242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=FAILURE method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:21:28 IST" name="setupMethod" finished-at="2025-10-28T01:21:39 IST" duration-ms="11065" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:21:39 IST" name="startTest" finished-at="2025-10-28T01:21:39 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:21:39 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-28T01:21:47 IST" duration-ms="7970" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Transfer Funds]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[transfer.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.TransferPage]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[❌ Network issue while navigating to login page]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: ❌ Network issue while navigating to login page
at org.testng.Assert.fail(Assert.java:111)
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:144)
at com.fintech.tests.NavigationUITests.topNavLinksLoadPages(NavigationUITests.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:21:47 IST" name="afterMethod" finished-at="2025-10-28T01:22:09 IST" duration-ms="21547" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=FAILURE method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:22:09 IST" name="setupMethod" finished-at="2025-10-28T01:22:19 IST" duration-ms="10016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:22:19 IST" name="startTest" finished-at="2025-10-28T01:22:19 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:22:19 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-28T01:22:35 IST" duration-ms="15892" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Request Loan]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[requestloan.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.LoanPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:22:35 IST" name="afterMethod" finished-at="2025-10-28T01:22:43 IST" duration-ms="8485" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:22:43 IST" name="setupMethod" finished-at="2025-10-28T01:22:52 IST" duration-ms="8543" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:22:52 IST" name="startTest" finished-at="2025-10-28T01:22:52 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:22:52 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-28T01:23:02 IST" duration-ms="10582" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Contact Us]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[contact.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.ContactPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:23:02 IST" name="afterMethod" finished-at="2025-10-28T01:23:06 IST" duration-ms="4016" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:23:06 IST" name="setupMethod" finished-at="2025-10-28T01:23:16 IST" duration-ms="9823" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:23:16 IST" name="startTest" finished-at="2025-10-28T01:23:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.validateAlertBoxContent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="validateAlertBoxContent()[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:23:16 IST" name="validateAlertBoxContent" finished-at="2025-10-28T01:23:29 IST" duration-ms="12671" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAlertBoxContent -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:23:29 IST" name="afterMethod" finished-at="2025-10-28T01:23:51 IST" duration-ms="22151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAlertBoxContent status=SUCCESS method=NavigationUITests.validateAlertBoxContent()[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:23:51 IST" name="setupMethod" finished-at="2025-10-28T01:23:58 IST" duration-ms="7290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:23:58 IST" name="startTest" finished-at="2025-10-28T01:23:58 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.validateButtonsAreClickable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="validateButtonsAreClickable()[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:23:58 IST" name="validateButtonsAreClickable" finished-at="2025-10-28T01:24:07 IST" duration-ms="8314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateButtonsAreClickable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:24:07 IST" name="afterMethod" finished-at="2025-10-28T01:24:16 IST" duration-ms="8956" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateButtonsAreClickable status=SUCCESS method=NavigationUITests.validateButtonsAreClickable()[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:27:43 IST" name="setupMethod" finished-at="2025-10-28T01:27:58 IST" duration-ms="15581" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method signature="verifyFontAndAlignment()[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:27:58 IST" name="verifyFontAndAlignment" finished-at="2025-10-28T01:28:10 IST" duration-ms="11537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFontAndAlignment -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:27:58 IST" name="startTest" finished-at="2025-10-28T01:27:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.verifyFontAndAlignment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d]" started-at="2025-10-28T01:28:10 IST" name="afterMethod" finished-at="2025-10-28T01:28:33 IST" duration-ms="23030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFontAndAlignment status=SUCCESS method=NavigationUITests.verifyFontAndAlignment()[pri:0, instance:com.fintech.tests.NavigationUITests@117e949d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.NavigationUITests -->
      <class name="com.fintech.tests.TransferTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:24:16 IST" name="beforeClassLog" finished-at="2025-10-28T01:24:16 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupAccountsOnce()[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:24:16 IST" name="setupAccountsOnce" finished-at="2025-10-28T01:24:16 IST" duration-ms="364" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAccountsOnce -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:24:36 IST" name="setupMethod" finished-at="2025-10-28T01:24:51 IST" duration-ms="14913" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:24:51 IST" name="startTest" finished-at="2025-10-28T01:24:51 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:24:51 IST" name="setupTransferContext" finished-at="2025-10-28T01:24:51 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:24:51 IST" name="validateFundsTransfer" data-provider="transferDataJson" finished-at="2025-10-28T01:24:51 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[VALID_TRANSFER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.00]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFundsTransfer -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:24:51 IST" name="afterMethod" finished-at="2025-10-28T01:25:23 IST" duration-ms="31268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFundsTransfer status=SKIP method=TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:25:23 IST" name="setupMethod" finished-at="2025-10-28T01:25:40 IST" duration-ms="17376" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:25:40 IST" name="startTest" finished-at="2025-10-28T01:25:40 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:25:40 IST" name="setupTransferContext" finished-at="2025-10-28T01:25:40 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:25:40 IST" name="validateFundsTransfer" data-provider="transferDataJson" finished-at="2025-10-28T01:25:40 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[SAME_ACCOUNT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFundsTransfer -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:25:40 IST" name="afterMethod" finished-at="2025-10-28T01:26:05 IST" duration-ms="24767" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFundsTransfer status=SKIP method=TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:26:05 IST" name="setupMethod" finished-at="2025-10-28T01:26:16 IST" duration-ms="11265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:26:16 IST" name="startTest" finished-at="2025-10-28T01:26:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:26:16 IST" name="setupTransferContext" finished-at="2025-10-28T01:26:16 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:26:16 IST" name="validateFundsTransfer" data-provider="transferDataJson" finished-at="2025-10-28T01:26:16 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMPTY_FIELDS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.00]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFundsTransfer -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:26:16 IST" name="afterMethod" finished-at="2025-10-28T01:26:32 IST" duration-ms="15507" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFundsTransfer status=SKIP method=TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:26:32 IST" name="setupMethod" finished-at="2025-10-28T01:26:45 IST" duration-ms="13599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:26:45 IST" name="startTest" finished-at="2025-10-28T01:26:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateSimpleTransferSuccess()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:26:45 IST" name="setupTransferContext" finished-at="2025-10-28T01:26:45 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateSimpleTransferSuccess()[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:26:45 IST" name="validateSimpleTransferSuccess" finished-at="2025-10-28T01:26:45 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSimpleTransferSuccess -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea]" started-at="2025-10-28T01:26:45 IST" name="afterMethod" finished-at="2025-10-28T01:26:56 IST" duration-ms="10662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSimpleTransferSuccess status=SKIP method=TransferTests.validateSimpleTransferSuccess()[pri:0, instance:com.fintech.tests.TransferTests@762ef0ea] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.TransferTests -->
      <class name="com.fintech.tests.AuthTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:55:07 IST" name="beforeClassLog" finished-at="2025-10-28T00:55:07 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:55:07 IST" name="setupMethod" finished-at="2025-10-28T00:55:11 IST" duration-ms="4351" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:55:11 IST" name="startTest" finished-at="2025-10-28T00:55:11 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:55:11 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-28T00:55:26 IST" duration-ms="14803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SUCCESS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:55:26 IST" name="afterMethod" finished-at="2025-10-28T00:55:27 IST" duration-ms="747" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:55:27 IST" name="setupMethod" finished-at="2025-10-28T00:55:33 IST" duration-ms="6291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:55:33 IST" name="startTest" finished-at="2025-10-28T00:55:33 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:55:33 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-28T00:56:24 IST" duration-ms="50630" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[alice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:56:24 IST" name="afterMethod" finished-at="2025-10-28T00:56:36 IST" duration-ms="12525" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:56:36 IST" name="setupMethod" finished-at="2025-10-28T00:56:45 IST" duration-ms="8928" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:56:45 IST" name="startTest" finished-at="2025-10-28T00:56:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:56:45 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-28T00:57:04 IST" duration-ms="19268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:57:04 IST" name="afterMethod" finished-at="2025-10-28T00:57:05 IST" duration-ms="1010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:57:05 IST" name="setupMethod" finished-at="2025-10-28T00:57:13 IST" duration-ms="7349" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:57:13 IST" name="startTest" finished-at="2025-10-28T00:57:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:57:13 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-28T00:57:35 IST" duration-ms="22052" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[notexist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[USER_NOT_EXIST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:57:35 IST" name="afterMethod" finished-at="2025-10-28T00:57:36 IST" duration-ms="883" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:57:52 IST" name="setupMethod" finished-at="2025-10-28T00:57:57 IST" duration-ms="4918" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:57:57 IST" name="startTest" finished-at="2025-10-28T00:57:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:57:57 IST" name="logoutAfterLogin" data-provider="userCredentials" finished-at="2025-10-28T00:58:24 IST" duration-ms="27905" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAfterLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:58:24 IST" name="afterMethod" finished-at="2025-10-28T00:58:31 IST" duration-ms="6865" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutAfterLogin status=SUCCESS method=AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:58:31 IST" name="setupMethod" finished-at="2025-10-28T00:58:38 IST" duration-ms="6215" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:58:38 IST" name="startTest" finished-at="2025-10-28T00:58:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:58:38 IST" name="logoutAfterLogin" data-provider="userCredentials" finished-at="2025-10-28T00:58:59 IST" duration-ms="21091" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAfterLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:58:59 IST" name="afterMethod" finished-at="2025-10-28T00:59:03 IST" duration-ms="3853" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutAfterLogin status=SUCCESS method=AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:59:03 IST" name="setupMethod" finished-at="2025-10-28T00:59:11 IST" duration-ms="8704" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:59:11 IST" name="startTest" finished-at="2025-10-28T00:59:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:59:11 IST" name="logoutAfterLogin" data-provider="userCredentials" finished-at="2025-10-28T00:59:31 IST" duration-ms="19730" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[notexist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAfterLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T00:59:31 IST" name="afterMethod" finished-at="2025-10-28T00:59:34 IST" duration-ms="3201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutAfterLogin status=SUCCESS method=AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T01:01:59 IST" name="setupMethod" finished-at="2025-10-28T01:02:11 IST" duration-ms="11795" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T01:02:11 IST" name="startTest" finished-at="2025-10-28T01:02:11 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.sessionTimeoutSimulation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T01:02:11 IST" name="sessionTimeoutSimulation" finished-at="2025-10-28T01:07:25 IST" duration-ms="314130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sessionTimeoutSimulation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@399c4be1]" started-at="2025-10-28T01:07:25 IST" name="afterMethod" finished-at="2025-10-28T01:07:56 IST" duration-ms="31036" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sessionTimeoutSimulation status=SUCCESS method=AuthTests.sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.AuthTests@399c4be1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.AuthTests -->
    </test> <!-- ChromeRun -->
    <test started-at="2025-10-28T00:51:50 IST" name="EdgeRun" finished-at="2025-10-28T01:35:49 IST" duration-ms="2638399">
      <class name="com.fintech.tests.LoginTests">
        <test-method is-config="true" signature="initReport()[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:51:49 IST" name="initReport" finished-at="2025-10-28T00:51:50 IST" duration-ms="1031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initReport -->
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:52:21 IST" name="beforeClassLog" finished-at="2025-10-28T00:52:21 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:52:24 IST" name="setupMethod" finished-at="2025-10-28T00:52:38 IST" duration-ms="13689" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:52:38 IST" name="startTest" finished-at="2025-10-28T00:52:38 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:52:38 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-28T00:52:55 IST" duration-ms="17224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SUCCESS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:52:55 IST" name="afterMethod" finished-at="2025-10-28T00:52:58 IST" duration-ms="3060" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:52:58 IST" name="setupMethod" finished-at="2025-10-28T00:53:13 IST" duration-ms="14992" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:53:13 IST" name="startTest" finished-at="2025-10-28T00:53:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:53:13 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-28T00:53:41 IST" duration-ms="28499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:53:41 IST" name="afterMethod" finished-at="2025-10-28T00:53:43 IST" duration-ms="1605" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:53:43 IST" name="setupMethod" finished-at="2025-10-28T00:53:52 IST" duration-ms="9388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:53:52 IST" name="startTest" finished-at="2025-10-28T00:53:52 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:53:52 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-28T00:54:13 IST" duration-ms="20895" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[notexist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[any]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[USER_NOT_EXIST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:54:13 IST" name="afterMethod" finished-at="2025-10-28T00:54:15 IST" duration-ms="1770" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:54:15 IST" name="setupMethod" finished-at="2025-10-28T00:54:26 IST" duration-ms="10432" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:54:26 IST" name="startTest" finished-at="2025-10-28T00:54:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:54:26 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-28T00:54:44 IST" duration-ms="18927" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[EMPTY]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:54:44 IST" name="afterMethod" finished-at="2025-10-28T00:54:46 IST" duration-ms="1111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:54:46 IST" name="setupMethod" finished-at="2025-10-28T00:54:56 IST" duration-ms="10253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:54:56 IST" name="startTest" finished-at="2025-10-28T00:54:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:54:56 IST" name="loginScenarios" data-provider="loginScenarios" finished-at="2025-10-28T00:55:15 IST" duration-ms="19271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[user@com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID_EMAIL]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginScenarios -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T00:55:15 IST" name="afterMethod" finished-at="2025-10-28T00:55:17 IST" duration-ms="1833" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginScenarios status=SUCCESS method=LoginTests.loginScenarios(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:00:37 IST" name="setupMethod" finished-at="2025-10-28T01:00:50 IST" duration-ms="13357" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:00:50 IST" name="startTest" finished-at="2025-10-28T01:00:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.passwordMasking()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="passwordMasking()[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:00:50 IST" name="passwordMasking" finished-at="2025-10-28T01:00:55 IST" duration-ms="5159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordMasking -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:00:55 IST" name="afterMethod" finished-at="2025-10-28T01:01:06 IST" duration-ms="10579" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passwordMasking status=SUCCESS method=LoginTests.passwordMasking()[pri:0, instance:com.fintech.tests.LoginTests@343570b7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:01:06 IST" name="setupMethod" finished-at="2025-10-28T01:01:22 IST" duration-ms="16712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:01:22 IST" name="startTest" finished-at="2025-10-28T01:01:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.rememberMeSimulation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="rememberMeSimulation()[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:01:22 IST" name="rememberMeSimulation" finished-at="2025-10-28T01:01:56 IST" duration-ms="34068" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- rememberMeSimulation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:01:56 IST" name="afterMethod" finished-at="2025-10-28T01:02:10 IST" duration-ms="13167" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=rememberMeSimulation status=SUCCESS method=LoginTests.rememberMeSimulation()[pri:0, instance:com.fintech.tests.LoginTests@343570b7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:02:10 IST" name="setupMethod" finished-at="2025-10-28T01:02:26 IST" duration-ms="15942" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:02:26 IST" name="startTest" finished-at="2025-10-28T01:02:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoginTests.sessionTimeoutSimulation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:02:26 IST" name="sessionTimeoutSimulation" finished-at="2025-10-28T01:02:52 IST" duration-ms="26457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sessionTimeoutSimulation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:02:52 IST" name="afterMethod" finished-at="2025-10-28T01:02:55 IST" duration-ms="3430" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sessionTimeoutSimulation status=SUCCESS method=LoginTests.sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.LoginTests@343570b7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="finishReport()[pri:0, instance:com.fintech.tests.LoginTests@343570b7]" started-at="2025-10-28T01:35:51 IST" name="finishReport" finished-at="2025-10-28T01:37:20 IST" duration-ms="89488" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- finishReport -->
      </class> <!-- com.fintech.tests.LoginTests -->
      <class name="com.fintech.tests.LoanTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:33:01 IST" name="beforeClassLog" finished-at="2025-10-28T01:33:01 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:33:01 IST" name="setupMethod" finished-at="2025-10-28T01:33:22 IST" duration-ms="20930" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:33:22 IST" name="startTest" finished-at="2025-10-28T01:33:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoanTests.testLoanTyping()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testLoanTyping()[pri:1, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:33:22 IST" name="testLoanTyping" finished-at="2025-10-28T01:33:22 IST" duration-ms="54" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Session ended]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Session ended
at com.fintech.tests.LoanTests.testLoanTyping(LoanTests.java:241)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoanTyping -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:33:22 IST" name="afterMethod" finished-at="2025-10-28T01:33:53 IST" duration-ms="31416" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLoanTyping status=SKIP method=LoanTests.testLoanTyping()[pri:1, instance:com.fintech.tests.LoanTests@3cc1435c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:33:53 IST" name="setupMethod" finished-at="2025-10-28T01:34:36 IST" duration-ms="43254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:34:36 IST" name="startTest" finished-at="2025-10-28T01:34:36 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoanTests.submitValidLoanRequest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="submitValidLoanRequest()[pri:2, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:34:36 IST" name="submitValidLoanRequest" finished-at="2025-10-28T01:34:36 IST" duration-ms="23" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Session ended]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Session ended
at com.fintech.tests.LoanTests.submitValidLoanRequest(LoanTests.java:176)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitValidLoanRequest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:34:36 IST" name="afterMethod" finished-at="2025-10-28T01:34:43 IST" duration-ms="6183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitValidLoanRequest status=SKIP method=LoanTests.submitValidLoanRequest()[pri:2, instance:com.fintech.tests.LoanTests@3cc1435c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:34:43 IST" name="setupMethod" finished-at="2025-10-28T01:35:21 IST" duration-ms="37204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:35:21 IST" name="startTest" finished-at="2025-10-28T01:35:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.LoanTests.applyLoan(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="applyLoan(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Boolean)[pri:3, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:35:21 IST" name="applyLoan" data-provider="loanDataExcel" finished-at="2025-10-28T01:35:21 IST" duration-ms="41" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Missing Info]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Session ended]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Session ended
at com.fintech.tests.LoanTests.applyLoan(LoanTests.java:28)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- applyLoan -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.LoanTests@3cc1435c]" started-at="2025-10-28T01:35:21 IST" name="afterMethod" finished-at="2025-10-28T01:35:49 IST" duration-ms="28201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=applyLoan status=SKIP method=LoanTests.applyLoan(java.lang.String,java.lang.Double,java.lang.Double,java.lang.Double,java.lang.Boolean)[pri:3, instance:com.fintech.tests.LoanTests@3cc1435c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.LoanTests -->
      <class name="com.fintech.tests.AccountTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:11:08 IST" name="beforeClassLog" finished-at="2025-10-28T01:11:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:11:08 IST" name="setupMethod" finished-at="2025-10-28T01:11:16 IST" duration-ms="8464" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:11:16 IST" name="startTest" finished-at="2025-10-28T01:11:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:11:16 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-28T01:11:42 IST" duration-ms="25876" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Balance update after transfer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[14455]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[100.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10/01/2025]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[10/01/2025]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Date]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Ascending]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[4392.93]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[⚠️ Balance element not found or stale]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: ⚠️ Balance element not found or stale
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:160)
at com.fintech.pages.AccountPage.getBalance(AccountPage.java:169)
at com.fintech.tests.AccountTests.testAccountFunctionality(AccountTests.java:367)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //table[@id='accountTable']//tr[td[a[contains(@href,'activity.htm?id=')]]]//td[2] (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.99, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:52680}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52680/devtoo..., se:cdpVersion: 141.0.3537.99, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 3d5289166cfdf26768aad471e3ee8d75
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at com.fintech.pages.BasePage.waitForVisibility(BasePage.java:194)
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:146)
... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:11:42 IST" name="resetBrowser" finished-at="2025-10-28T01:11:44 IST" duration-ms="2037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:11:44 IST" name="afterMethod" finished-at="2025-10-28T01:11:55 IST" duration-ms="10959" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SKIP method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:11:55 IST" name="setupMethod" finished-at="2025-10-28T01:12:03 IST" duration-ms="8425" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:12:03 IST" name="startTest" finished-at="2025-10-28T01:12:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:12:03 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-28T01:13:40 IST" duration-ms="96136" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Filter transactions by date range]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[09/01/2025]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[09/30/2025]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:13:40 IST" name="resetBrowser" finished-at="2025-10-28T01:13:42 IST" duration-ms="2025" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:13:42 IST" name="afterMethod" finished-at="2025-10-28T01:13:44 IST" duration-ms="2388" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SUCCESS method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:13:44 IST" name="setupMethod" finished-at="2025-10-28T01:14:02 IST" duration-ms="17832" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:14:02 IST" name="startTest" finished-at="2025-10-28T01:14:02 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:14:02 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-28T01:14:55 IST" duration-ms="53641" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sort transactions by date/amount]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Date]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Ascending]]>
              </value>
            </param>
            <param index="8">
              <value is-null="true"/>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:14:55 IST" name="resetBrowser" finished-at="2025-10-28T01:14:57 IST" duration-ms="1832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:14:57 IST" name="afterMethod" finished-at="2025-10-28T01:15:01 IST" duration-ms="3740" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SUCCESS method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:15:01 IST" name="setupMethod" finished-at="2025-10-28T01:15:17 IST" duration-ms="15829" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:15:17 IST" name="startTest" finished-at="2025-10-28T01:15:17 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:15:17 IST" name="testAccountFunctionality" data-provider="accountFunctionalityData" finished-at="2025-10-28T01:15:44 IST" duration-ms="27340" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[Validate account summary]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[13344]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value is-null="true"/>
            </param>
            <param index="4">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[2942.93]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[⚠️ Balance element not found or stale]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: ⚠️ Balance element not found or stale
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:160)
at com.fintech.tests.AccountTests.testAccountFunctionality(AccountTests.java:459)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //table[@id='accountTable']//tr[td[a[contains(@href,'activity.htm?id=')]]]//td[2] (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.99, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:53249}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53249/devtoo..., se:cdpVersion: 141.0.3537.99, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: b40ba2e987358fd1ac4b6cae0f0a6b5e
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at com.fintech.pages.BasePage.waitForVisibility(BasePage.java:194)
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:146)
... 21 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountFunctionality -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:15:44 IST" name="resetBrowser" finished-at="2025-10-28T01:15:46 IST" duration-ms="1563" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:15:46 IST" name="afterMethod" finished-at="2025-10-28T01:15:47 IST" duration-ms="1396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountFunctionality status=SKIP method=AccountTests.testAccountFunctionality(java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Double,java.lang.Boolean)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:15:47 IST" name="setupMethod" finished-at="2025-10-28T01:16:03 IST" duration-ms="16281" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:16:03 IST" name="startTest" finished-at="2025-10-28T01:16:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testBalanceUpdateAfterTransaction()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testBalanceUpdateAfterTransaction()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:16:03 IST" name="testBalanceUpdateAfterTransaction" finished-at="2025-10-28T01:16:33 IST" duration-ms="29611" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[⚠️ Balance element not found or stale]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: ⚠️ Balance element not found or stale
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:160)
at com.fintech.pages.AccountPage.getBalance(AccountPage.java:169)
at com.fintech.tests.AccountTests.testBalanceUpdateAfterTransaction(AccountTests.java:130)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of element located by By.xpath: //table[@id='accountTable']//tr[td[a[contains(@href,'activity.htm?id=')]]]//td[2] (tried for 15 second(s) with 500 milliseconds interval)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.99, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:53397}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53397/devtoo..., se:cdpVersion: 141.0.3537.99, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 110fffabd22a62fd3d23ec8eb0b29020
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at com.fintech.pages.BasePage.waitForVisibility(BasePage.java:194)
at com.fintech.pages.AccountPage.getBalanceFromCurrentPage(AccountPage.java:146)
... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBalanceUpdateAfterTransaction -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:16:33 IST" name="resetBrowser" finished-at="2025-10-28T01:16:35 IST" duration-ms="1571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:16:35 IST" name="afterMethod" finished-at="2025-10-28T01:16:36 IST" duration-ms="1660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testBalanceUpdateAfterTransaction status=SKIP method=AccountTests.testBalanceUpdateAfterTransaction()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:16:36 IST" name="setupMethod" finished-at="2025-10-28T01:16:49 IST" duration-ms="12227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:16:49 IST" name="startTest" finished-at="2025-10-28T01:16:49 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testCheckingAccountSummary()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testCheckingAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:16:49 IST" name="testCheckingAccountSummary" finished-at="2025-10-28T01:16:57 IST" duration-ms="8812" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCheckingAccountSummary -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:16:57 IST" name="resetBrowser" finished-at="2025-10-28T01:16:59 IST" duration-ms="1564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:16:59 IST" name="afterMethod" finished-at="2025-10-28T01:17:03 IST" duration-ms="4190" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testCheckingAccountSummary status=SUCCESS method=AccountTests.testCheckingAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:17:03 IST" name="setupMethod" finished-at="2025-10-28T01:17:21 IST" duration-ms="17750" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method signature="testFullTransactionHistory()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:17:21 IST" name="testFullTransactionHistory" finished-at="2025-10-28T01:18:09 IST" duration-ms="47793" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Transaction history should be visible expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Transaction history should be visible expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at com.fintech.tests.AccountTests.testFullTransactionHistory(AccountTests.java:236)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFullTransactionHistory -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:17:21 IST" name="startTest" finished-at="2025-10-28T01:17:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testFullTransactionHistory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:18:09 IST" name="resetBrowser" finished-at="2025-10-28T01:18:10 IST" duration-ms="1450" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:18:10 IST" name="afterMethod" finished-at="2025-10-28T01:18:11 IST" duration-ms="983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFullTransactionHistory status=FAILURE method=AccountTests.testFullTransactionHistory()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:18:11 IST" name="setupMethod" finished-at="2025-10-28T01:18:18 IST" duration-ms="6746" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method signature="testSavingsAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:18:18 IST" name="testSavingsAccountSummary" finished-at="2025-10-28T01:18:28 IST" duration-ms="9647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSavingsAccountSummary -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:18:18 IST" name="startTest" finished-at="2025-10-28T01:18:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testSavingsAccountSummary()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:18:28 IST" name="resetBrowser" finished-at="2025-10-28T01:18:29 IST" duration-ms="1526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:18:29 IST" name="afterMethod" finished-at="2025-10-28T01:18:30 IST" duration-ms="932" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testSavingsAccountSummary status=SUCCESS method=AccountTests.testSavingsAccountSummary()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:18:30 IST" name="setupMethod" finished-at="2025-10-28T01:18:39 IST" duration-ms="8562" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:18:39 IST" name="startTest" finished-at="2025-10-28T01:18:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testTransactionDetailsFormat()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testTransactionDetailsFormat()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:18:39 IST" name="testTransactionDetailsFormat" finished-at="2025-10-28T01:19:29 IST" duration-ms="50417" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionDetailsFormat -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:19:29 IST" name="resetBrowser" finished-at="2025-10-28T01:19:31 IST" duration-ms="1559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:19:31 IST" name="afterMethod" finished-at="2025-10-28T01:19:31 IST" duration-ms="753" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTransactionDetailsFormat status=SUCCESS method=AccountTests.testTransactionDetailsFormat()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:19:31 IST" name="setupMethod" finished-at="2025-10-28T01:20:05 IST" duration-ms="33909" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:20:05 IST" name="startTest" finished-at="2025-10-28T01:20:05 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testTransactionFilterByDateRange()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testTransactionFilterByDateRange()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:20:05 IST" name="testTransactionFilterByDateRange" finished-at="2025-10-28T01:20:19 IST" duration-ms="13895" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: net::ERR_INTERNET_DISCONNECTED
  (Session info: MicrosoftEdge=141.0.3537.99)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [a0d5122798248e850042e9d6294b5807, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.99, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:53936}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53936/devtoo..., se:cdpVersion: 141.0.3537.99, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a0d5122798248e850042e9d6294b5807]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: net::ERR_INTERNET_DISCONNECTED
  (Session info: MicrosoftEdge=141.0.3537.99)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [a0d5122798248e850042e9d6294b5807, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.99, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:53936}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53936/devtoo..., se:cdpVersion: 141.0.3537.99, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a0d5122798248e850042e9d6294b5807
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:325)
at com.fintech.pages.LoginPage.open(LoginPage.java:51)
at com.fintech.tests.AccountTests.loginAsJohn(AccountTests.java:33)
at com.fintech.tests.AccountTests.testTransactionFilterByDateRange(AccountTests.java:301)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionFilterByDateRange -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:20:19 IST" name="resetBrowser" finished-at="2025-10-28T01:20:19 IST" duration-ms="160" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: net::ERR_INTERNET_DISCONNECTED
  (Session info: MicrosoftEdge=141.0.3537.99)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [a0d5122798248e850042e9d6294b5807, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.99, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:53936}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53936/devtoo..., se:cdpVersion: 141.0.3537.99, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a0d5122798248e850042e9d6294b5807]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: net::ERR_INTERNET_DISCONNECTED
  (Session info: MicrosoftEdge=141.0.3537.99)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [a0d5122798248e850042e9d6294b5807, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.99, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:53936}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53936/devtoo..., se:cdpVersion: 141.0.3537.99, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a0d5122798248e850042e9d6294b5807
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:325)
at com.fintech.tests.AccountTests.resetBrowser(AccountTests.java:472)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:20:19 IST" name="afterMethod" finished-at="2025-10-28T01:20:50 IST" duration-ms="31244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTransactionFilterByDateRange status=FAILURE method=AccountTests.testTransactionFilterByDateRange()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:20:50 IST" name="setupMethod" finished-at="2025-10-28T01:21:07 IST" duration-ms="16975" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:21:07 IST" name="startTest" finished-at="2025-10-28T01:21:07 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AccountTests.testTransactionSortingByDateAndAmount()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="testTransactionSortingByDateAndAmount()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:21:07 IST" name="testTransactionSortingByDateAndAmount" finished-at="2025-10-28T01:21:07 IST" duration-ms="0" status="SKIP">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: net::ERR_INTERNET_DISCONNECTED
  (Session info: MicrosoftEdge=141.0.3537.99)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [a0d5122798248e850042e9d6294b5807, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.99, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:53936}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53936/devtoo..., se:cdpVersion: 141.0.3537.99, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a0d5122798248e850042e9d6294b5807]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: net::ERR_INTERNET_DISCONNECTED
  (Session info: MicrosoftEdge=141.0.3537.99)
Build info: version: '4.35.0', revision: '1c58e5028b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.7'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [a0d5122798248e850042e9d6294b5807, get {url=https://parabank.parasoft.com/parabank/index.htm}]
Capabilities {acceptInsecureCerts: false, browserName: MicrosoftEdge, browserVersion: 141.0.3537.99, fedcm:accounts: true, ms:edgeOptions: {debuggerAddress: localhost:53936}, msedge: {msedgedriverVersion: 141.0.3537.99 (1b2f83d6a142..., userDataDir: C:\Users\hp\AppData\Local\T...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53936/devtoo..., se:cdpVersion: 141.0.3537.99, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: a0d5122798248e850042e9d6294b5807
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:557)
at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:325)
at com.fintech.tests.AccountTests.resetBrowser(AccountTests.java:472)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:836)
at org.testng.internal.invokers.TestInvoker.runAfterConfigurations(TestInvoker.java:805)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:781)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTransactionSortingByDateAndAmount -->
        <test-method is-config="true" signature="resetBrowser()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:21:07 IST" name="resetBrowser" finished-at="2025-10-28T01:21:07 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resetBrowser -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AccountTests@71c3b41]" started-at="2025-10-28T01:21:07 IST" name="afterMethod" finished-at="2025-10-28T01:21:22 IST" duration-ms="14138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTransactionSortingByDateAndAmount status=SKIP method=AccountTests.testTransactionSortingByDateAndAmount()[pri:0, instance:com.fintech.tests.AccountTests@71c3b41] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.AccountTests -->
      <class name="com.fintech.tests.ContactTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:00:13 IST" name="beforeClassLog" finished-at="2025-10-28T01:00:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:00:13 IST" name="setupMethod" finished-at="2025-10-28T01:00:24 IST" duration-ms="11306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:00:24 IST" name="startTest" finished-at="2025-10-28T01:00:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.openContactForm()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="openContactForm()[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:00:24 IST" name="openContactForm" finished-at="2025-10-28T01:00:32 IST" duration-ms="8395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openContactForm -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:00:32 IST" name="afterMethod" finished-at="2025-10-28T01:00:37 IST" duration-ms="4320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openContactForm status=SUCCESS method=ContactTests.openContactForm()[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:09:45 IST" name="setupMethod" finished-at="2025-10-28T01:09:58 IST" duration-ms="12435" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:09:58 IST" name="startTest" finished-at="2025-10-28T01:09:58 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:09:58 IST" name="submitContactForm" data-provider="contactDataExcel" finished-at="2025-10-28T01:10:12 IST" duration-ms="13935" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Test User]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test@example.com]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[9.999999999E9]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[This is a test message]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitContactForm -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:10:12 IST" name="afterMethod" finished-at="2025-10-28T01:10:28 IST" duration-ms="16228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitContactForm status=SUCCESS method=ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:10:28 IST" name="setupMethod" finished-at="2025-10-28T01:10:35 IST" duration-ms="7410" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:10:35 IST" name="startTest" finished-at="2025-10-28T01:10:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:10:35 IST" name="submitContactForm" data-provider="contactDataExcel" finished-at="2025-10-28T01:10:49 IST" duration-ms="13531" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- submitContactForm -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:10:49 IST" name="afterMethod" finished-at="2025-10-28T01:11:08 IST" duration-ms="18540" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=submitContactForm status=SUCCESS method=ContactTests.submitContactForm(java.lang.String,java.lang.String,java.lang.Double,java.lang.String,java.lang.Boolean)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:30:44 IST" name="setupMethod" finished-at="2025-10-28T01:31:04 IST" duration-ms="20234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:31:04 IST" name="startTest" finished-at="2025-10-28T01:31:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.ContactTests.verifyContactSuccessMessage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyContactSuccessMessage()[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:31:04 IST" name="verifyContactSuccessMessage" finished-at="2025-10-28T01:31:39 IST" duration-ms="35238" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyContactSuccessMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d]" started-at="2025-10-28T01:31:39 IST" name="afterMethod" finished-at="2025-10-28T01:32:10 IST" duration-ms="31042" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyContactSuccessMessage status=SUCCESS method=ContactTests.verifyContactSuccessMessage()[pri:0, instance:com.fintech.tests.ContactTests@6bf0219d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.ContactTests -->
      <class name="com.fintech.tests.NavigationUITests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T00:51:51 IST" name="beforeClassLog" finished-at="2025-10-28T00:51:51 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T00:51:51 IST" name="setupMethod" finished-at="2025-10-28T00:52:16 IST" duration-ms="25152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T00:52:16 IST" name="startTest" finished-at="2025-10-28T00:52:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.checkParaBankConnectivity()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="checkParaBankConnectivity()[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T00:52:16 IST" name="checkParaBankConnectivity" finished-at="2025-10-28T00:52:19 IST" duration-ms="2933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkParaBankConnectivity -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T00:52:19 IST" name="afterMethod" finished-at="2025-10-28T00:52:21 IST" duration-ms="2845" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkParaBankConnectivity status=SUCCESS method=NavigationUITests.checkParaBankConnectivity()[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T00:57:58 IST" name="setupMethod" finished-at="2025-10-28T00:58:05 IST" duration-ms="7152" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T00:58:05 IST" name="startTest" finished-at="2025-10-28T00:58:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.logoRedirectsHome()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoRedirectsHome()[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T00:58:05 IST" name="logoRedirectsHome" finished-at="2025-10-28T00:58:12 IST" duration-ms="6818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoRedirectsHome -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T00:58:12 IST" name="afterMethod" finished-at="2025-10-28T00:58:15 IST" duration-ms="3227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoRedirectsHome status=SUCCESS method=NavigationUITests.logoRedirectsHome()[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:21:22 IST" name="setupMethod" finished-at="2025-10-28T01:22:16 IST" duration-ms="54135" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:22:16 IST" name="startTest" finished-at="2025-10-28T01:22:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:22:16 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-28T01:22:39 IST" duration-ms="22803" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Accounts Overview]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[overview.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.AccountPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:22:39 IST" name="afterMethod" finished-at="2025-10-28T01:22:59 IST" duration-ms="20055" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:22:59 IST" name="setupMethod" finished-at="2025-10-28T01:23:22 IST" duration-ms="23023" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:23:22 IST" name="startTest" finished-at="2025-10-28T01:23:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:23:22 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-28T01:23:35 IST" duration-ms="13299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Transfer Funds]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[transfer.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.TransferPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:23:35 IST" name="afterMethod" finished-at="2025-10-28T01:24:01 IST" duration-ms="25912" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:24:01 IST" name="setupMethod" finished-at="2025-10-28T01:24:17 IST" duration-ms="15960" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:24:17 IST" name="startTest" finished-at="2025-10-28T01:24:17 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:24:17 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-28T01:24:39 IST" duration-ms="22371" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Request Loan]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[requestloan.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.LoanPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:24:39 IST" name="afterMethod" finished-at="2025-10-28T01:25:00 IST" duration-ms="20979" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:25:00 IST" name="setupMethod" finished-at="2025-10-28T01:25:28 IST" duration-ms="27868" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:25:28 IST" name="startTest" finished-at="2025-10-28T01:25:28 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:25:28 IST" name="topNavLinksLoadPages" data-provider="navLinksExcel" finished-at="2025-10-28T01:25:43 IST" duration-ms="14374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Contact Us]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[contact.htm]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[class com.fintech.pages.ContactPage]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- topNavLinksLoadPages -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:25:43 IST" name="afterMethod" finished-at="2025-10-28T01:26:04 IST" duration-ms="21765" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=topNavLinksLoadPages status=SUCCESS method=NavigationUITests.topNavLinksLoadPages(java.lang.String,java.lang.String,java.lang.Class)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:26:04 IST" name="setupMethod" finished-at="2025-10-28T01:26:16 IST" duration-ms="11452" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:26:16 IST" name="startTest" finished-at="2025-10-28T01:26:16 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.validateAlertBoxContent()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="validateAlertBoxContent()[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:26:16 IST" name="validateAlertBoxContent" finished-at="2025-10-28T01:26:27 IST" duration-ms="11430" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateAlertBoxContent -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:26:27 IST" name="afterMethod" finished-at="2025-10-28T01:26:51 IST" duration-ms="24109" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateAlertBoxContent status=SUCCESS method=NavigationUITests.validateAlertBoxContent()[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:26:51 IST" name="setupMethod" finished-at="2025-10-28T01:27:10 IST" duration-ms="18741" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:27:10 IST" name="startTest" finished-at="2025-10-28T01:27:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.validateButtonsAreClickable()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="validateButtonsAreClickable()[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:27:10 IST" name="validateButtonsAreClickable" finished-at="2025-10-28T01:27:25 IST" duration-ms="15126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateButtonsAreClickable -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:27:25 IST" name="afterMethod" finished-at="2025-10-28T01:27:43 IST" duration-ms="18072" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateButtonsAreClickable status=SUCCESS method=NavigationUITests.validateButtonsAreClickable()[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:32:10 IST" name="setupMethod" finished-at="2025-10-28T01:32:33 IST" duration-ms="22486" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:32:33 IST" name="startTest" finished-at="2025-10-28T01:32:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.NavigationUITests.verifyFontAndAlignment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="verifyFontAndAlignment()[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:32:33 IST" name="verifyFontAndAlignment" finished-at="2025-10-28T01:32:44 IST" duration-ms="11594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyFontAndAlignment -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991]" started-at="2025-10-28T01:32:44 IST" name="afterMethod" finished-at="2025-10-28T01:33:01 IST" duration-ms="16218" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyFontAndAlignment status=SUCCESS method=NavigationUITests.verifyFontAndAlignment()[pri:0, instance:com.fintech.tests.NavigationUITests@dd0c991] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.NavigationUITests -->
      <class name="com.fintech.tests.TransferTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:27:43 IST" name="beforeClassLog" finished-at="2025-10-28T01:27:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupAccountsOnce()[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:27:43 IST" name="setupAccountsOnce" finished-at="2025-10-28T01:27:43 IST" duration-ms="0" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupAccountsOnce -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:27:43 IST" name="setupMethod" finished-at="2025-10-28T01:28:10 IST" duration-ms="26267" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:28:10 IST" name="startTest" finished-at="2025-10-28T01:28:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:28:10 IST" name="setupTransferContext" finished-at="2025-10-28T01:28:10 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:28:10 IST" name="validateFundsTransfer" data-provider="transferDataJson" finished-at="2025-10-28T01:28:10 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[VALID_TRANSFER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.00]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFundsTransfer -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:28:10 IST" name="afterMethod" finished-at="2025-10-28T01:28:24 IST" duration-ms="14030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFundsTransfer status=SKIP method=TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:28:24 IST" name="setupMethod" finished-at="2025-10-28T01:28:34 IST" duration-ms="10110" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:28:34 IST" name="startTest" finished-at="2025-10-28T01:28:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:28:34 IST" name="setupTransferContext" finished-at="2025-10-28T01:28:34 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:28:34 IST" name="validateFundsTransfer" data-provider="transferDataJson" finished-at="2025-10-28T01:28:34 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[SAME_ACCOUNT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFundsTransfer -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:28:34 IST" name="afterMethod" finished-at="2025-10-28T01:29:06 IST" duration-ms="31873" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFundsTransfer status=SKIP method=TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:29:06 IST" name="setupMethod" finished-at="2025-10-28T01:30:09 IST" duration-ms="63093" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:30:09 IST" name="startTest" finished-at="2025-10-28T01:30:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:30:09 IST" name="setupTransferContext" finished-at="2025-10-28T01:30:09 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:30:09 IST" name="validateFundsTransfer" data-provider="transferDataJson" finished-at="2025-10-28T01:30:09 IST" duration-ms="0" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[EMPTY_FIELDS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.00]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateFundsTransfer -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:30:09 IST" name="afterMethod" finished-at="2025-10-28T01:30:17 IST" duration-ms="8562" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateFundsTransfer status=SKIP method=TransferTests.validateFundsTransfer(java.lang.String,java.lang.String,boolean)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:30:17 IST" name="setupMethod" finished-at="2025-10-28T01:30:37 IST" duration-ms="20082" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:30:37 IST" name="startTest" finished-at="2025-10-28T01:30:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.TransferTests.validateSimpleTransferSuccess()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="setupTransferContext()[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:30:37 IST" name="setupTransferContext" finished-at="2025-10-28T01:30:37 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupTransferContext -->
        <test-method signature="validateSimpleTransferSuccess()[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:30:37 IST" name="validateSimpleTransferSuccess" finished-at="2025-10-28T01:30:37 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.NullPointerException">
            <message>
              <![CDATA[Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException: Cannot invoke "org.openqa.selenium.WebDriver.navigate()" because "this.driver" is null
at com.fintech.tests.BaseTest.loginAsJohn(BaseTest.java:139)
at com.fintech.tests.TransferTests.setupAccountsOnce(TransferTests.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSimpleTransferSuccess -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e]" started-at="2025-10-28T01:30:37 IST" name="afterMethod" finished-at="2025-10-28T01:30:44 IST" duration-ms="6573" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateSimpleTransferSuccess status=SKIP method=TransferTests.validateSimpleTransferSuccess()[pri:0, instance:com.fintech.tests.TransferTests@236e3f4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.TransferTests -->
      <class name="com.fintech.tests.AuthTests">
        <test-method is-config="true" signature="beforeClassLog()[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:55:17 IST" name="beforeClassLog" finished-at="2025-10-28T00:55:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassLog -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:55:17 IST" name="setupMethod" finished-at="2025-10-28T00:55:24 IST" duration-ms="6829" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:55:24 IST" name="startTest" finished-at="2025-10-28T00:55:24 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:55:24 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-28T00:55:57 IST" duration-ms="33337" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[SUCCESS]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:55:57 IST" name="afterMethod" finished-at="2025-10-28T00:56:07 IST" duration-ms="9589" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:56:07 IST" name="setupMethod" finished-at="2025-10-28T00:56:26 IST" duration-ms="19022" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:56:26 IST" name="startTest" finished-at="2025-10-28T00:56:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:56:26 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-28T00:56:47 IST" duration-ms="20729" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[alice]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pass123]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:56:47 IST" name="afterMethod" finished-at="2025-10-28T00:56:51 IST" duration-ms="3900" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:56:51 IST" name="setupMethod" finished-at="2025-10-28T00:57:03 IST" duration-ms="12849" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:57:03 IST" name="startTest" finished-at="2025-10-28T00:57:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:57:03 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-28T00:57:22 IST" duration-ms="18246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[INVALID]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:57:22 IST" name="afterMethod" finished-at="2025-10-28T00:57:23 IST" duration-ms="1660" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:57:23 IST" name="setupMethod" finished-at="2025-10-28T00:57:32 IST" duration-ms="8871" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:57:32 IST" name="startTest" finished-at="2025-10-28T00:57:32 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:57:32 IST" name="loginWithExcelData" data-provider="excelLoginData" finished-at="2025-10-28T00:57:51 IST" duration-ms="18825" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[notexist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[USER_NOT_EXIST]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithExcelData -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:57:51 IST" name="afterMethod" finished-at="2025-10-28T00:57:58 IST" duration-ms="6885" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithExcelData status=SUCCESS method=AuthTests.loginWithExcelData(java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:58:15 IST" name="setupMethod" finished-at="2025-10-28T00:58:22 IST" duration-ms="7311" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:58:22 IST" name="startTest" finished-at="2025-10-28T00:58:22 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:58:22 IST" name="logoutAfterLogin" data-provider="userCredentials" finished-at="2025-10-28T00:58:53 IST" duration-ms="30980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAfterLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:58:53 IST" name="afterMethod" finished-at="2025-10-28T00:58:54 IST" duration-ms="736" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutAfterLogin status=SUCCESS method=AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:58:54 IST" name="setupMethod" finished-at="2025-10-28T00:59:08 IST" duration-ms="14101" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:59:08 IST" name="startTest" finished-at="2025-10-28T00:59:08 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:59:08 IST" name="logoutAfterLogin" data-provider="userCredentials" finished-at="2025-10-28T00:59:30 IST" duration-ms="21760" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[wrong]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAfterLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:59:30 IST" name="afterMethod" finished-at="2025-10-28T00:59:31 IST" duration-ms="873" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutAfterLogin status=SUCCESS method=AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:59:31 IST" name="setupMethod" finished-at="2025-10-28T00:59:44 IST" duration-ms="12889" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:59:44 IST" name="startTest" finished-at="2025-10-28T00:59:44 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T00:59:44 IST" name="logoutAfterLogin" data-provider="userCredentials" finished-at="2025-10-28T01:00:11 IST" duration-ms="27265" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[notexist]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[demo]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAfterLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T01:00:11 IST" name="afterMethod" finished-at="2025-10-28T01:00:13 IST" duration-ms="1481" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=logoutAfterLogin status=SUCCESS method=AuthTests.logoutAfterLogin(java.lang.String,java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setupMethod(java.lang.String)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T01:02:55 IST" name="setupMethod" finished-at="2025-10-28T01:03:31 IST" duration-ms="35500" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupMethod -->
        <test-method is-config="true" signature="startTest(java.lang.reflect.Method)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T01:03:31 IST" name="startTest" finished-at="2025-10-28T01:03:31 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.fintech.tests.AuthTests.sessionTimeoutSimulation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method signature="sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T01:03:31 IST" name="sessionTimeoutSimulation" finished-at="2025-10-28T01:09:37 IST" duration-ms="366120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sessionTimeoutSimulation -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.fintech.tests.AuthTests@157853da]" started-at="2025-10-28T01:09:37 IST" name="afterMethod" finished-at="2025-10-28T01:09:45 IST" duration-ms="8247" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=sessionTimeoutSimulation status=SUCCESS method=AuthTests.sessionTimeoutSimulation()[pri:0, instance:com.fintech.tests.AuthTests@157853da] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.fintech.tests.AuthTests -->
    </test> <!-- EdgeRun -->
  </suite> <!-- ParaBankAutomationSuite -->
</testng-results>
